/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package dev.hathora.cloud_api.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DeploymentConfig - User specified deployment configuration for your application at runtime.
 */

public class DeploymentConfig {
    /**
     * Additional ports your server listens on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalContainerPorts")
    public ContainerPort[] additionalContainerPorts;

    public DeploymentConfig withAdditionalContainerPorts(ContainerPort[] additionalContainerPorts) {
        this.additionalContainerPorts = additionalContainerPorts;
        return this;
    }
    
    /**
     * Default port the server listens on.
     */
    @JsonProperty("containerPort")
    public Integer containerPort;

    public DeploymentConfig withContainerPort(Integer containerPort) {
        this.containerPort = containerPort;
        return this;
    }
    
    /**
     * The environment variable that our process will have access to at runtime.
     */
    @JsonProperty("env")
    public DeploymentConfigEnv[] env;

    public DeploymentConfig withEnv(DeploymentConfigEnv[] env) {
        this.env = env;
        return this;
    }
    
    /**
     * A plan defines how much CPU and memory is required to run an instance of your game server.
     * 
     * `tiny`: shared core, 1gb memory
     * 
     * `small`: 1 core, 2gb memory
     * 
     * `medium`: 2 core, 4gb memory
     * 
     * `large`: 4 core, 8gb memory
     */
    @JsonProperty("planName")
    public PlanName planName;

    public DeploymentConfig withPlanName(PlanName planName) {
        this.planName = planName;
        return this;
    }
    
    /**
     * Governs how many [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) can be scheduled in a process.
     */
    @JsonProperty("roomsPerProcess")
    public Integer roomsPerProcess;

    public DeploymentConfig withRoomsPerProcess(Integer roomsPerProcess) {
        this.roomsPerProcess = roomsPerProcess;
        return this;
    }
    
    /**
     * Transport type specifies the underlying communication protocol to the exposed port.
     */
    @JsonProperty("transportType")
    public TransportType transportType;

    public DeploymentConfig withTransportType(TransportType transportType) {
        this.transportType = transportType;
        return this;
    }
    
    public DeploymentConfig(@JsonProperty("containerPort") Integer containerPort, @JsonProperty("env") DeploymentConfigEnv[] env, @JsonProperty("planName") PlanName planName, @JsonProperty("roomsPerProcess") Integer roomsPerProcess, @JsonProperty("transportType") TransportType transportType) {
        this.containerPort = containerPort;
        this.env = env;
        this.planName = planName;
        this.roomsPerProcess = roomsPerProcess;
        this.transportType = transportType;
  }
}
