/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package dev.hathora.cloud_api.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

import dev.hathora.cloud_api.HathoraCloud;
import dev.hathora.cloud_api.utils.Utils;
import dev.hathora.cloud_api.utils.LazySingletonValue;

public class CreateLobbyDeprecatedRequestBuilder {

    private CreateLobbyDeprecatedSecurity security;
    private dev.hathora.cloud_api.models.shared.CreateLobbyParams createLobbyParams;
    private Optional<? extends String> appId = Optional.empty();
    private Optional<? extends String> roomId = Optional.empty();

    private final SDKMethodInterfaces.MethodCallCreateLobbyDeprecated sdk;
    
    public CreateLobbyDeprecatedRequestBuilder(SDKMethodInterfaces.MethodCallCreateLobbyDeprecated sdk) {
        this.sdk = sdk;
    }
             
    public CreateLobbyDeprecatedRequestBuilder security(CreateLobbyDeprecatedSecurity security) {
        Utils.checkNotNull(security, "security");
        this.security = security;
        return this;
    }
             
    public CreateLobbyDeprecatedRequestBuilder createLobbyParams(dev.hathora.cloud_api.models.shared.CreateLobbyParams createLobbyParams) {
        Utils.checkNotNull(createLobbyParams, "createLobbyParams");
        this.createLobbyParams = createLobbyParams;
        return this;
    }
                
    public CreateLobbyDeprecatedRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }
             
    public CreateLobbyDeprecatedRequestBuilder appId(Optional<? extends String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }
                
    public CreateLobbyDeprecatedRequestBuilder roomId(String roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = Optional.of(roomId);
        return this;
    }
             
    public CreateLobbyDeprecatedRequestBuilder roomId(Optional<? extends String> roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = roomId;
        return this;
    }

    public CreateLobbyDeprecatedResponse call() throws Exception {
        return sdk.createLobbyDeprecated(
            security,
            createLobbyParams,
            appId,
            roomId);
    }
}