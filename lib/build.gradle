/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java and JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11    
    withSourcesJar()
    withJavadocJar()
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/pom.xml")
    }
}

jar {
    dependsOn(":$project.name:generatePomFileForMavenPublication")
    into("META-INF/maven/dev.hathora/cloud-api") {
        from("$buildDir/pom.xml") 
    }
}

publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
          }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'dev.hathora'
            artifactId = 'cloud-api'
            version = '2.0.0'

            from components.java

            pom {
                name = 'My Company Java SDK'
                description = 'SDK enabling Java developers to easily integrate with the My Company API.'
                url = 'https://github.com/owner/repo'
                scm {
                    url = 'github.com/owner/repo'
                    connection = 'scm:git:ssh://git@github.com/owner/repo.git'
                }
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://mit-license.org/'
                    }
                }
                developers {
                    developer {
                        name = 'My Company'
                        organization = 'My Company'
                        email = 'info@mycompany.com'
                    }
                }
                organization {
                    name = 'My Company'
                    url = 'www.mycompany.com'
                }
            }
        }
    }
}

if (!project.hasProperty('skip.signing')) {
    signing {
        def signingKey = findProperty("signingKey")
        def signingPassphrase = findProperty("signingPassphrase")
        useInMemoryPgpKeys(signingKey, signingPassphrase)
        sign publishing.publications.maven
    }
}

javadoc {
    options.encoding = "UTF-8"

    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')   
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.16.1'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpmime:4.5.14'
    implementation 'commons-io:commons-io:2.15.1'
}

