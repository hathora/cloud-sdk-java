/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.hathora.cloud_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.hathora.cloud_sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class UploadBodyParams {

    @JsonProperty("key")
    private String key;

    @JsonProperty("value")
    private String value;

    @JsonCreator
    public UploadBodyParams(
            @JsonProperty("key") String key,
            @JsonProperty("value") String value) {
        Utils.checkNotNull(key, "key");
        Utils.checkNotNull(value, "value");
        this.key = key;
        this.value = value;
    }

    @JsonIgnore
    public String key() {
        return key;
    }

    @JsonIgnore
    public String value() {
        return value;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UploadBodyParams withKey(String key) {
        Utils.checkNotNull(key, "key");
        this.key = key;
        return this;
    }

    public UploadBodyParams withValue(String value) {
        Utils.checkNotNull(value, "value");
        this.value = value;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UploadBodyParams other = (UploadBodyParams) o;
        return 
            java.util.Objects.deepEquals(this.key, other.key) &&
            java.util.Objects.deepEquals(this.value, other.value);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            key,
            value);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UploadBodyParams.class,
                "key", key,
                "value", value);
    }
    
    public final static class Builder {
 
        private String key;
 
        private String value;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder key(String key) {
            Utils.checkNotNull(key, "key");
            this.key = key;
            return this;
        }

        public Builder value(String value) {
            Utils.checkNotNull(value, "value");
            this.value = value;
            return this;
        }
        
        public UploadBodyParams build() {
            return new UploadBodyParams(
                key,
                value);
        }
    }
}

