/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.hathora.cloud_sdk.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.hathora.cloud_sdk.models.errors.SDKError;
import com.hathora.cloud_sdk.utils.LazySingletonValue;
import com.hathora.cloud_sdk.utils.Utils;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapitools.jackson.nullable.JsonNullable;


public class CreateRoomRequestBuilder {

    private com.hathora.cloud_sdk.models.shared.CreateRoomParams createRoomParams;
    private Optional<? extends String> appId = Optional.empty();
    private Optional<? extends String> roomId = Optional.empty();
    private final SDKMethodInterfaces.MethodCallCreateRoom sdk;

    public CreateRoomRequestBuilder(SDKMethodInterfaces.MethodCallCreateRoom sdk) {
        this.sdk = sdk;
    }

    public CreateRoomRequestBuilder createRoomParams(com.hathora.cloud_sdk.models.shared.CreateRoomParams createRoomParams) {
        Utils.checkNotNull(createRoomParams, "createRoomParams");
        this.createRoomParams = createRoomParams;
        return this;
    }
                
    public CreateRoomRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public CreateRoomRequestBuilder appId(Optional<? extends String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }
                
    public CreateRoomRequestBuilder roomId(String roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = Optional.of(roomId);
        return this;
    }

    public CreateRoomRequestBuilder roomId(Optional<? extends String> roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = roomId;
        return this;
    }

    public CreateRoomResponse call() throws Exception {

        return sdk.createRoom(
            createRoomParams,
            appId,
            roomId);
    }
}
