/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.hathora.hathora_cloud_sdk.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.hathora.hathora_cloud_sdk.models.shared.CreateLobbyParams;
import com.hathora.hathora_cloud_sdk.utils.SpeakeasyMetadata;
import com.hathora.hathora_cloud_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;


public class CreateLobbyDeprecatedRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private CreateLobbyParams createLobbyParams;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=appId")
    private Optional<String> appId;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=roomId")
    private Optional<String> roomId;

    @JsonCreator
    public CreateLobbyDeprecatedRequest(
            CreateLobbyParams createLobbyParams,
            Optional<String> appId,
            Optional<String> roomId) {
        Utils.checkNotNull(createLobbyParams, "createLobbyParams");
        Utils.checkNotNull(appId, "appId");
        Utils.checkNotNull(roomId, "roomId");
        this.createLobbyParams = createLobbyParams;
        this.appId = appId;
        this.roomId = roomId;
    }
    
    public CreateLobbyDeprecatedRequest(
            CreateLobbyParams createLobbyParams) {
        this(createLobbyParams, Optional.empty(), Optional.empty());
    }

    @JsonIgnore
    public CreateLobbyParams createLobbyParams() {
        return createLobbyParams;
    }

    @JsonIgnore
    public Optional<String> appId() {
        return appId;
    }

    @JsonIgnore
    public Optional<String> roomId() {
        return roomId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateLobbyDeprecatedRequest withCreateLobbyParams(CreateLobbyParams createLobbyParams) {
        Utils.checkNotNull(createLobbyParams, "createLobbyParams");
        this.createLobbyParams = createLobbyParams;
        return this;
    }

    public CreateLobbyDeprecatedRequest withAppId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.ofNullable(appId);
        return this;
    }

    public CreateLobbyDeprecatedRequest withAppId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }

    public CreateLobbyDeprecatedRequest withRoomId(String roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = Optional.ofNullable(roomId);
        return this;
    }

    public CreateLobbyDeprecatedRequest withRoomId(Optional<String> roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = roomId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateLobbyDeprecatedRequest other = (CreateLobbyDeprecatedRequest) o;
        return 
            Objects.deepEquals(this.createLobbyParams, other.createLobbyParams) &&
            Objects.deepEquals(this.appId, other.appId) &&
            Objects.deepEquals(this.roomId, other.roomId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            createLobbyParams,
            appId,
            roomId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateLobbyDeprecatedRequest.class,
                "createLobbyParams", createLobbyParams,
                "appId", appId,
                "roomId", roomId);
    }
    
    public final static class Builder {
 
        private CreateLobbyParams createLobbyParams;
 
        private Optional<String> appId = Optional.empty();
 
        private Optional<String> roomId = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder createLobbyParams(CreateLobbyParams createLobbyParams) {
            Utils.checkNotNull(createLobbyParams, "createLobbyParams");
            this.createLobbyParams = createLobbyParams;
            return this;
        }

        public Builder appId(String appId) {
            Utils.checkNotNull(appId, "appId");
            this.appId = Optional.ofNullable(appId);
            return this;
        }

        public Builder appId(Optional<String> appId) {
            Utils.checkNotNull(appId, "appId");
            this.appId = appId;
            return this;
        }

        public Builder roomId(String roomId) {
            Utils.checkNotNull(roomId, "roomId");
            this.roomId = Optional.ofNullable(roomId);
            return this;
        }

        public Builder roomId(Optional<String> roomId) {
            Utils.checkNotNull(roomId, "roomId");
            this.roomId = roomId;
            return this;
        }
        
        public CreateLobbyDeprecatedRequest build() {
            return new CreateLobbyDeprecatedRequest(
                createLobbyParams,
                appId,
                roomId);
        }
    }
}

