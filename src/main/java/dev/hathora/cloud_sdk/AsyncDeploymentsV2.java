/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateDeploymentV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetDeploymentInfoV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetDeploymentsV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetLatestDeploymentV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.async.CreateDeploymentV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateDeploymentV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentInfoV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentInfoV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentsV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentsV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetLatestDeploymentV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetLatestDeploymentV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.shared.DeploymentConfigV2;
import dev.hathora.cloud_sdk.operations.CreateDeploymentV2Deprecated;
import dev.hathora.cloud_sdk.operations.GetDeploymentInfoV2Deprecated;
import dev.hathora.cloud_sdk.operations.GetDeploymentsV2Deprecated;
import dev.hathora.cloud_sdk.operations.GetLatestDeploymentV2Deprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Deprecated;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncDeploymentsV2 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final DeploymentsV2 syncSDK;

    AsyncDeploymentsV2(DeploymentsV2 syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public DeploymentsV2 sync() {
        return syncSDK;
    }


    /**
     * CreateDeploymentV2Deprecated
     * 
     * <p>Create a new [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment). Creating a new deployment means all new rooms created will use the latest deployment configuration, but existing games in progress will not be affected.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateDeploymentV2DeprecatedRequestBuilder createDeploymentV2Deprecated() {
        return new CreateDeploymentV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateDeploymentV2Deprecated
     * 
     * <p>Create a new [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment). Creating a new deployment means all new rooms created will use the latest deployment configuration, but existing games in progress will not be affected.
     * 
     * @param deploymentConfigV2 
     * @param buildId 
     * @return CompletableFuture&lt;CreateDeploymentV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateDeploymentV2DeprecatedResponse> createDeploymentV2Deprecated(DeploymentConfigV2 deploymentConfigV2, int buildId) {
        return createDeploymentV2Deprecated(deploymentConfigV2, Optional.empty(), buildId);
    }

    /**
     * CreateDeploymentV2Deprecated
     * 
     * <p>Create a new [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment). Creating a new deployment means all new rooms created will use the latest deployment configuration, but existing games in progress will not be affected.
     * 
     * @param deploymentConfigV2 
     * @param appId 
     * @param buildId 
     * @return CompletableFuture&lt;CreateDeploymentV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateDeploymentV2DeprecatedResponse> createDeploymentV2Deprecated(
            DeploymentConfigV2 deploymentConfigV2, Optional<String> appId,
            int buildId) {
        CreateDeploymentV2DeprecatedRequest request =
            CreateDeploymentV2DeprecatedRequest
                .builder()
                .deploymentConfigV2(deploymentConfigV2)
                .appId(appId)
                .buildId(buildId)
                .build();
        AsyncRequestOperation<CreateDeploymentV2DeprecatedRequest, CreateDeploymentV2DeprecatedResponse> operation
              = new CreateDeploymentV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetDeploymentInfoV2Deprecated
     * 
     * <p>Get details for a [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetDeploymentInfoV2DeprecatedRequestBuilder getDeploymentInfoV2Deprecated() {
        return new GetDeploymentInfoV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetDeploymentInfoV2Deprecated
     * 
     * <p>Get details for a [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment).
     * 
     * @param deploymentId 
     * @return CompletableFuture&lt;GetDeploymentInfoV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentInfoV2DeprecatedResponse> getDeploymentInfoV2Deprecated(int deploymentId) {
        return getDeploymentInfoV2Deprecated(Optional.empty(), deploymentId);
    }

    /**
     * GetDeploymentInfoV2Deprecated
     * 
     * <p>Get details for a [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment).
     * 
     * @param appId 
     * @param deploymentId 
     * @return CompletableFuture&lt;GetDeploymentInfoV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentInfoV2DeprecatedResponse> getDeploymentInfoV2Deprecated(Optional<String> appId, int deploymentId) {
        GetDeploymentInfoV2DeprecatedRequest request =
            GetDeploymentInfoV2DeprecatedRequest
                .builder()
                .appId(appId)
                .deploymentId(deploymentId)
                .build();
        AsyncRequestOperation<GetDeploymentInfoV2DeprecatedRequest, GetDeploymentInfoV2DeprecatedResponse> operation
              = new GetDeploymentInfoV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetDeploymentsV2Deprecated
     * 
     * <p>Returns an array of [deployments](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetDeploymentsV2DeprecatedRequestBuilder getDeploymentsV2Deprecated() {
        return new GetDeploymentsV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetDeploymentsV2Deprecated
     * 
     * <p>Returns an array of [deployments](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return CompletableFuture&lt;GetDeploymentsV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentsV2DeprecatedResponse> getDeploymentsV2DeprecatedDirect() {
        return getDeploymentsV2Deprecated(Optional.empty());
    }

    /**
     * GetDeploymentsV2Deprecated
     * 
     * <p>Returns an array of [deployments](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param appId 
     * @return CompletableFuture&lt;GetDeploymentsV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentsV2DeprecatedResponse> getDeploymentsV2Deprecated(Optional<String> appId) {
        GetDeploymentsV2DeprecatedRequest request =
            GetDeploymentsV2DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<GetDeploymentsV2DeprecatedRequest, GetDeploymentsV2DeprecatedResponse> operation
              = new GetDeploymentsV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetLatestDeploymentV2Deprecated
     * 
     * <p>Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetLatestDeploymentV2DeprecatedRequestBuilder getLatestDeploymentV2Deprecated() {
        return new GetLatestDeploymentV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetLatestDeploymentV2Deprecated
     * 
     * <p>Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return CompletableFuture&lt;GetLatestDeploymentV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetLatestDeploymentV2DeprecatedResponse> getLatestDeploymentV2DeprecatedDirect() {
        return getLatestDeploymentV2Deprecated(Optional.empty());
    }

    /**
     * GetLatestDeploymentV2Deprecated
     * 
     * <p>Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param appId 
     * @return CompletableFuture&lt;GetLatestDeploymentV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetLatestDeploymentV2DeprecatedResponse> getLatestDeploymentV2Deprecated(Optional<String> appId) {
        GetLatestDeploymentV2DeprecatedRequest request =
            GetLatestDeploymentV2DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<GetLatestDeploymentV2DeprecatedRequest, GetLatestDeploymentV2DeprecatedResponse> operation
              = new GetLatestDeploymentV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
