/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.RequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateLobbyDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.CreateLobbyDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreateLobbyDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.CreateLobbyDeprecatedSecurity;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbyRequest;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbyRequestBody;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbyRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbyResponse;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbySecurity;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyRequest;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyRequestBody;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyResponse;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbySecurity;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyRequest;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyRequestBody;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyResponse;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbySecurity;
import dev.hathora.cloud_sdk.models.operations.GetLobbyInfoRequest;
import dev.hathora.cloud_sdk.models.operations.GetLobbyInfoRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.GetLobbyInfoResponse;
import dev.hathora.cloud_sdk.models.operations.ListActivePublicLobbiesDeprecatedV2Request;
import dev.hathora.cloud_sdk.models.operations.ListActivePublicLobbiesDeprecatedV2RequestBuilder;
import dev.hathora.cloud_sdk.models.operations.ListActivePublicLobbiesDeprecatedV2Response;
import dev.hathora.cloud_sdk.models.operations.SetLobbyStateRequest;
import dev.hathora.cloud_sdk.models.operations.SetLobbyStateRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.SetLobbyStateResponse;
import dev.hathora.cloud_sdk.models.shared.CreateLobbyParams;
import dev.hathora.cloud_sdk.models.shared.Region;
import dev.hathora.cloud_sdk.models.shared.SetLobbyStateParams;
import dev.hathora.cloud_sdk.operations.CreateLobbyDeprecated;
import dev.hathora.cloud_sdk.operations.CreateLocalLobby;
import dev.hathora.cloud_sdk.operations.CreatePrivateLobby;
import dev.hathora.cloud_sdk.operations.CreatePublicLobby;
import dev.hathora.cloud_sdk.operations.GetLobbyInfo;
import dev.hathora.cloud_sdk.operations.ListActivePublicLobbiesDeprecatedV2;
import dev.hathora.cloud_sdk.operations.SetLobbyState;
import java.lang.Deprecated;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class LobbiesV2 {
    private final SDKConfiguration sdkConfiguration;

    LobbiesV2(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * CreateLobbyDeprecated
     * 
     * <p>Create a new lobby for an [application](https://hathora.dev/docs/concepts/hathora-entities#application). A lobby object is a wrapper around a [room](https://hathora.dev/docs/concepts/hathora-entities#room) object. With a lobby, you get additional functionality like configuring the visibility of the room, managing the state of a match, and retrieving a list of public lobbies to display to players.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateLobbyDeprecatedRequestBuilder createLobbyDeprecated() {
        return new CreateLobbyDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateLobbyDeprecated
     * 
     * <p>Create a new lobby for an [application](https://hathora.dev/docs/concepts/hathora-entities#application). A lobby object is a wrapper around a [room](https://hathora.dev/docs/concepts/hathora-entities#room) object. With a lobby, you get additional functionality like configuring the visibility of the room, managing the state of a match, and retrieving a list of public lobbies to display to players.
     * 
     * @param security The security details to use for authentication.
     * @param createLobbyParams 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateLobbyDeprecatedResponse createLobbyDeprecated(CreateLobbyDeprecatedSecurity security, CreateLobbyParams createLobbyParams) throws Exception {
        return createLobbyDeprecated(security, createLobbyParams, Optional.empty(),
            Optional.empty());
    }

    /**
     * CreateLobbyDeprecated
     * 
     * <p>Create a new lobby for an [application](https://hathora.dev/docs/concepts/hathora-entities#application). A lobby object is a wrapper around a [room](https://hathora.dev/docs/concepts/hathora-entities#room) object. With a lobby, you get additional functionality like configuring the visibility of the room, managing the state of a match, and retrieving a list of public lobbies to display to players.
     * 
     * @param security The security details to use for authentication.
     * @param createLobbyParams 
     * @param appId 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateLobbyDeprecatedResponse createLobbyDeprecated(
            CreateLobbyDeprecatedSecurity security, CreateLobbyParams createLobbyParams,
            Optional<String> appId, Optional<String> roomId) throws Exception {
        CreateLobbyDeprecatedRequest request =
            CreateLobbyDeprecatedRequest
                .builder()
                .createLobbyParams(createLobbyParams)
                .appId(appId)
                .roomId(roomId)
                .build();
        RequestOperation<CreateLobbyDeprecatedRequest, CreateLobbyDeprecatedResponse> operation
              = new CreateLobbyDeprecated.Sync(sdkConfiguration, security);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * CreateLocalLobby
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateLocalLobbyRequestBuilder createLocalLobby() {
        return new CreateLocalLobbyRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateLocalLobby
     * 
     * @param security The security details to use for authentication.
     * @param requestBody 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateLocalLobbyResponse createLocalLobby(CreateLocalLobbySecurity security, CreateLocalLobbyRequestBody requestBody) throws Exception {
        return createLocalLobby(security, requestBody, Optional.empty(),
            Optional.empty());
    }

    /**
     * CreateLocalLobby
     * 
     * @param security The security details to use for authentication.
     * @param requestBody 
     * @param appId 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateLocalLobbyResponse createLocalLobby(
            CreateLocalLobbySecurity security, CreateLocalLobbyRequestBody requestBody,
            Optional<String> appId, Optional<String> roomId) throws Exception {
        CreateLocalLobbyRequest request =
            CreateLocalLobbyRequest
                .builder()
                .requestBody(requestBody)
                .appId(appId)
                .roomId(roomId)
                .build();
        RequestOperation<CreateLocalLobbyRequest, CreateLocalLobbyResponse> operation
              = new CreateLocalLobby.Sync(sdkConfiguration, security);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * CreatePrivateLobby
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePrivateLobbyRequestBuilder createPrivateLobby() {
        return new CreatePrivateLobbyRequestBuilder(sdkConfiguration);
    }

    /**
     * CreatePrivateLobby
     * 
     * @param security The security details to use for authentication.
     * @param requestBody 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePrivateLobbyResponse createPrivateLobby(CreatePrivateLobbySecurity security, CreatePrivateLobbyRequestBody requestBody) throws Exception {
        return createPrivateLobby(security, requestBody, Optional.empty(),
            Optional.empty());
    }

    /**
     * CreatePrivateLobby
     * 
     * @param security The security details to use for authentication.
     * @param requestBody 
     * @param appId 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePrivateLobbyResponse createPrivateLobby(
            CreatePrivateLobbySecurity security, CreatePrivateLobbyRequestBody requestBody,
            Optional<String> appId, Optional<String> roomId) throws Exception {
        CreatePrivateLobbyRequest request =
            CreatePrivateLobbyRequest
                .builder()
                .requestBody(requestBody)
                .appId(appId)
                .roomId(roomId)
                .build();
        RequestOperation<CreatePrivateLobbyRequest, CreatePrivateLobbyResponse> operation
              = new CreatePrivateLobby.Sync(sdkConfiguration, security);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * CreatePublicLobby
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePublicLobbyRequestBuilder createPublicLobby() {
        return new CreatePublicLobbyRequestBuilder(sdkConfiguration);
    }

    /**
     * CreatePublicLobby
     * 
     * @param security The security details to use for authentication.
     * @param requestBody 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePublicLobbyResponse createPublicLobby(CreatePublicLobbySecurity security, CreatePublicLobbyRequestBody requestBody) throws Exception {
        return createPublicLobby(security, requestBody, Optional.empty(),
            Optional.empty());
    }

    /**
     * CreatePublicLobby
     * 
     * @param security The security details to use for authentication.
     * @param requestBody 
     * @param appId 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePublicLobbyResponse createPublicLobby(
            CreatePublicLobbySecurity security, CreatePublicLobbyRequestBody requestBody,
            Optional<String> appId, Optional<String> roomId) throws Exception {
        CreatePublicLobbyRequest request =
            CreatePublicLobbyRequest
                .builder()
                .requestBody(requestBody)
                .appId(appId)
                .roomId(roomId)
                .build();
        RequestOperation<CreatePublicLobbyRequest, CreatePublicLobbyResponse> operation
              = new CreatePublicLobby.Sync(sdkConfiguration, security);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * GetLobbyInfo
     * 
     * <p>Get details for a lobby.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetLobbyInfoRequestBuilder getLobbyInfo() {
        return new GetLobbyInfoRequestBuilder(sdkConfiguration);
    }

    /**
     * GetLobbyInfo
     * 
     * <p>Get details for a lobby.
     * 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetLobbyInfoResponse getLobbyInfo(String roomId) throws Exception {
        return getLobbyInfo(Optional.empty(), roomId);
    }

    /**
     * GetLobbyInfo
     * 
     * <p>Get details for a lobby.
     * 
     * @param appId 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetLobbyInfoResponse getLobbyInfo(Optional<String> appId, String roomId) throws Exception {
        GetLobbyInfoRequest request =
            GetLobbyInfoRequest
                .builder()
                .appId(appId)
                .roomId(roomId)
                .build();
        RequestOperation<GetLobbyInfoRequest, GetLobbyInfoResponse> operation
              = new GetLobbyInfo.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * ListActivePublicLobbiesDeprecatedV2
     * 
     * <p>Get all active lobbies for a an [application](https://hathora.dev/docs/concepts/hathora-entities#application). Filter by optionally passing in a `region`. Use this endpoint to display all public lobbies that a player can join in the game client.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ListActivePublicLobbiesDeprecatedV2RequestBuilder listActivePublicLobbiesDeprecatedV2() {
        return new ListActivePublicLobbiesDeprecatedV2RequestBuilder(sdkConfiguration);
    }

    /**
     * ListActivePublicLobbiesDeprecatedV2
     * 
     * <p>Get all active lobbies for a an [application](https://hathora.dev/docs/concepts/hathora-entities#application). Filter by optionally passing in a `region`. Use this endpoint to display all public lobbies that a player can join in the game client.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ListActivePublicLobbiesDeprecatedV2Response listActivePublicLobbiesDeprecatedV2Direct() throws Exception {
        return listActivePublicLobbiesDeprecatedV2(Optional.empty(), Optional.empty());
    }

    /**
     * ListActivePublicLobbiesDeprecatedV2
     * 
     * <p>Get all active lobbies for a an [application](https://hathora.dev/docs/concepts/hathora-entities#application). Filter by optionally passing in a `region`. Use this endpoint to display all public lobbies that a player can join in the game client.
     * 
     * @param appId 
     * @param region 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ListActivePublicLobbiesDeprecatedV2Response listActivePublicLobbiesDeprecatedV2(Optional<String> appId, Optional<? extends Region> region) throws Exception {
        ListActivePublicLobbiesDeprecatedV2Request request =
            ListActivePublicLobbiesDeprecatedV2Request
                .builder()
                .appId(appId)
                .region(region)
                .build();
        RequestOperation<ListActivePublicLobbiesDeprecatedV2Request, ListActivePublicLobbiesDeprecatedV2Response> operation
              = new ListActivePublicLobbiesDeprecatedV2.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * SetLobbyState
     * 
     * <p>Set the state of a lobby. State is intended to be set by the server and must be smaller than 1MB. Use this endpoint to store match data like live player count to enforce max number of clients or persist end-game data (i.e. winner or final scores).
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public SetLobbyStateRequestBuilder setLobbyState() {
        return new SetLobbyStateRequestBuilder(sdkConfiguration);
    }

    /**
     * SetLobbyState
     * 
     * <p>Set the state of a lobby. State is intended to be set by the server and must be smaller than 1MB. Use this endpoint to store match data like live player count to enforce max number of clients or persist end-game data (i.e. winner or final scores).
     * 
     * @param setLobbyStateParams 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public SetLobbyStateResponse setLobbyState(SetLobbyStateParams setLobbyStateParams, String roomId) throws Exception {
        return setLobbyState(setLobbyStateParams, Optional.empty(), roomId);
    }

    /**
     * SetLobbyState
     * 
     * <p>Set the state of a lobby. State is intended to be set by the server and must be smaller than 1MB. Use this endpoint to store match data like live player count to enforce max number of clients or persist end-game data (i.e. winner or final scores).
     * 
     * @param setLobbyStateParams 
     * @param appId 
     * @param roomId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public SetLobbyStateResponse setLobbyState(
            SetLobbyStateParams setLobbyStateParams, Optional<String> appId,
            String roomId) throws Exception {
        SetLobbyStateRequest request =
            SetLobbyStateRequest
                .builder()
                .setLobbyStateParams(setLobbyStateParams)
                .appId(appId)
                .roomId(roomId)
                .build();
        RequestOperation<SetLobbyStateRequest, SetLobbyStateResponse> operation
              = new SetLobbyState.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
