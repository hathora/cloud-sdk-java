/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;
import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestlessOperation;

import dev.hathora.cloud_sdk.models.operations.DeleteAppV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetAppInfoV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.UpdateAppV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.async.CreateAppV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateAppV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.DeleteAppV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.DeleteAppV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetAppInfoV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetAppInfoV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetAppsV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetAppsV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.UpdateAppV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.UpdateAppV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.shared.CreateAppConfig;
import dev.hathora.cloud_sdk.operations.CreateAppV1Deprecated;
import dev.hathora.cloud_sdk.operations.DeleteAppV1Deprecated;
import dev.hathora.cloud_sdk.operations.GetAppInfoV1Deprecated;
import dev.hathora.cloud_sdk.operations.GetAppsV1Deprecated;
import dev.hathora.cloud_sdk.operations.UpdateAppV1Deprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Deprecated;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncAppsV1 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AppsV1 syncSDK;

    AsyncAppsV1(AppsV1 syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public AppsV1 sync() {
        return syncSDK;
    }


    /**
     * CreateAppV1Deprecated
     * 
     * <p>Create a new [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateAppV1DeprecatedRequestBuilder createAppV1Deprecated() {
        return new CreateAppV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateAppV1Deprecated
     * 
     * <p>Create a new [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CreateAppV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateAppV1DeprecatedResponse> createAppV1Deprecated(CreateAppConfig request) {
        AsyncRequestOperation<CreateAppConfig, CreateAppV1DeprecatedResponse> operation
              = new CreateAppV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * DeleteAppV1Deprecated
     * 
     * <p>Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public DeleteAppV1DeprecatedRequestBuilder deleteAppV1Deprecated() {
        return new DeleteAppV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * DeleteAppV1Deprecated
     * 
     * <p>Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     * 
     * @return CompletableFuture&lt;DeleteAppV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<DeleteAppV1DeprecatedResponse> deleteAppV1DeprecatedDirect() {
        return deleteAppV1Deprecated(Optional.empty());
    }

    /**
     * DeleteAppV1Deprecated
     * 
     * <p>Delete an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`. Your organization will lose access to this application.
     * 
     * @param appId 
     * @return CompletableFuture&lt;DeleteAppV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<DeleteAppV1DeprecatedResponse> deleteAppV1Deprecated(Optional<String> appId) {
        DeleteAppV1DeprecatedRequest request =
            DeleteAppV1DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<DeleteAppV1DeprecatedRequest, DeleteAppV1DeprecatedResponse> operation
              = new DeleteAppV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetAppInfoV1Deprecated
     * 
     * <p>Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetAppInfoV1DeprecatedRequestBuilder getAppInfoV1Deprecated() {
        return new GetAppInfoV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetAppInfoV1Deprecated
     * 
     * <p>Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * 
     * @return CompletableFuture&lt;GetAppInfoV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetAppInfoV1DeprecatedResponse> getAppInfoV1DeprecatedDirect() {
        return getAppInfoV1Deprecated(Optional.empty());
    }

    /**
     * GetAppInfoV1Deprecated
     * 
     * <p>Get details for an [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * 
     * @param appId 
     * @return CompletableFuture&lt;GetAppInfoV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetAppInfoV1DeprecatedResponse> getAppInfoV1Deprecated(Optional<String> appId) {
        GetAppInfoV1DeprecatedRequest request =
            GetAppInfoV1DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<GetAppInfoV1DeprecatedRequest, GetAppInfoV1DeprecatedResponse> operation
              = new GetAppInfoV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetAppsV1Deprecated
     * 
     * <p>Returns an unsorted list of your organization’s [applications](https://hathora.dev/docs/concepts/hathora-entities#application). An application is uniquely identified by an `appId`.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetAppsV1DeprecatedRequestBuilder getAppsV1Deprecated() {
        return new GetAppsV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetAppsV1Deprecated
     * 
     * <p>Returns an unsorted list of your organization’s [applications](https://hathora.dev/docs/concepts/hathora-entities#application). An application is uniquely identified by an `appId`.
     * 
     * @return CompletableFuture&lt;GetAppsV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetAppsV1DeprecatedResponse> getAppsV1DeprecatedDirect() {
        AsyncRequestlessOperation<GetAppsV1DeprecatedResponse> operation
            = new GetAppsV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }


    /**
     * UpdateAppV1Deprecated
     * 
     * <p>Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public UpdateAppV1DeprecatedRequestBuilder updateAppV1Deprecated() {
        return new UpdateAppV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * UpdateAppV1Deprecated
     * 
     * <p>Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * 
     * @param createAppConfig 
     * @return CompletableFuture&lt;UpdateAppV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<UpdateAppV1DeprecatedResponse> updateAppV1Deprecated(CreateAppConfig createAppConfig) {
        return updateAppV1Deprecated(createAppConfig, Optional.empty());
    }

    /**
     * UpdateAppV1Deprecated
     * 
     * <p>Update data for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application) using `appId`.
     * 
     * @param createAppConfig 
     * @param appId 
     * @return CompletableFuture&lt;UpdateAppV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<UpdateAppV1DeprecatedResponse> updateAppV1Deprecated(CreateAppConfig createAppConfig, Optional<String> appId) {
        UpdateAppV1DeprecatedRequest request =
            UpdateAppV1DeprecatedRequest
                .builder()
                .createAppConfig(createAppConfig)
                .appId(appId)
                .build();
        AsyncRequestOperation<UpdateAppV1DeprecatedRequest, UpdateAppV1DeprecatedResponse> operation
              = new UpdateAppV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
