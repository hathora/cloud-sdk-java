/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class DeploymentsV3Page {

    @JsonProperty("deployments")
    private List<DeploymentV3> deployments;

    @JsonCreator
    public DeploymentsV3Page(
            @JsonProperty("deployments") List<DeploymentV3> deployments) {
        Utils.checkNotNull(deployments, "deployments");
        this.deployments = deployments;
    }

    @JsonIgnore
    public List<DeploymentV3> deployments() {
        return deployments;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public DeploymentsV3Page withDeployments(List<DeploymentV3> deployments) {
        Utils.checkNotNull(deployments, "deployments");
        this.deployments = deployments;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeploymentsV3Page other = (DeploymentsV3Page) o;
        return 
            Objects.deepEquals(this.deployments, other.deployments);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            deployments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeploymentsV3Page.class,
                "deployments", deployments);
    }
    
    public final static class Builder {
 
        private List<DeploymentV3> deployments;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder deployments(List<DeploymentV3> deployments) {
            Utils.checkNotNull(deployments, "deployments");
            this.deployments = deployments;
            return this;
        }
        
        public DeploymentsV3Page build() {
            return new DeploymentsV3Page(
                deployments);
        }
    }
}
