/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;


public class LoadBalancerConfig {
    /**
     * Whether load balancing is enabled for this application.
     */
    @JsonProperty("enabled")
    private boolean enabled;

    @JsonCreator
    public LoadBalancerConfig(
            @JsonProperty("enabled") boolean enabled) {
        Utils.checkNotNull(enabled, "enabled");
        this.enabled = enabled;
    }

    /**
     * Whether load balancing is enabled for this application.
     */
    @JsonIgnore
    public boolean enabled() {
        return enabled;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Whether load balancing is enabled for this application.
     */
    public LoadBalancerConfig withEnabled(boolean enabled) {
        Utils.checkNotNull(enabled, "enabled");
        this.enabled = enabled;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LoadBalancerConfig other = (LoadBalancerConfig) o;
        return 
            Utils.enhancedDeepEquals(this.enabled, other.enabled);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            enabled);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LoadBalancerConfig.class,
                "enabled", enabled);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Boolean enabled;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Whether load balancing is enabled for this application.
         */
        public Builder enabled(boolean enabled) {
            Utils.checkNotNull(enabled, "enabled");
            this.enabled = enabled;
            return this;
        }

        public LoadBalancerConfig build() {

            return new LoadBalancerConfig(
                enabled);
        }

    }
}
