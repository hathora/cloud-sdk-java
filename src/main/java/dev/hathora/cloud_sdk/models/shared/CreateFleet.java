/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class CreateFleet {

    @JsonProperty("autoscalerConfig")
    private AutoscalerConfig autoscalerConfig;

    /**
     * Readable name for a fleet. Must be unique within an organization.
     */
    @JsonProperty("name")
    private String name;


    @JsonProperty("nodeShape")
    private NodeShape nodeShape;

    @JsonCreator
    public CreateFleet(
            @JsonProperty("autoscalerConfig") AutoscalerConfig autoscalerConfig,
            @JsonProperty("name") String name,
            @JsonProperty("nodeShape") NodeShape nodeShape) {
        Utils.checkNotNull(autoscalerConfig, "autoscalerConfig");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(nodeShape, "nodeShape");
        this.autoscalerConfig = autoscalerConfig;
        this.name = name;
        this.nodeShape = nodeShape;
    }

    @JsonIgnore
    public AutoscalerConfig autoscalerConfig() {
        return autoscalerConfig;
    }

    /**
     * Readable name for a fleet. Must be unique within an organization.
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    @JsonIgnore
    public NodeShape nodeShape() {
        return nodeShape;
    }

    public static Builder builder() {
        return new Builder();
    }


    public CreateFleet withAutoscalerConfig(AutoscalerConfig autoscalerConfig) {
        Utils.checkNotNull(autoscalerConfig, "autoscalerConfig");
        this.autoscalerConfig = autoscalerConfig;
        return this;
    }

    /**
     * Readable name for a fleet. Must be unique within an organization.
     */
    public CreateFleet withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public CreateFleet withNodeShape(NodeShape nodeShape) {
        Utils.checkNotNull(nodeShape, "nodeShape");
        this.nodeShape = nodeShape;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateFleet other = (CreateFleet) o;
        return 
            Utils.enhancedDeepEquals(this.autoscalerConfig, other.autoscalerConfig) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.nodeShape, other.nodeShape);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            autoscalerConfig, name, nodeShape);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateFleet.class,
                "autoscalerConfig", autoscalerConfig,
                "name", name,
                "nodeShape", nodeShape);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private AutoscalerConfig autoscalerConfig;

        private String name;

        private NodeShape nodeShape;

        private Builder() {
          // force use of static builder() method
        }


        public Builder autoscalerConfig(AutoscalerConfig autoscalerConfig) {
            Utils.checkNotNull(autoscalerConfig, "autoscalerConfig");
            this.autoscalerConfig = autoscalerConfig;
            return this;
        }


        /**
         * Readable name for a fleet. Must be unique within an organization.
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }


        public Builder nodeShape(NodeShape nodeShape) {
            Utils.checkNotNull(nodeShape, "nodeShape");
            this.nodeShape = nodeShape;
            return this;
        }

        public CreateFleet build() {

            return new CreateFleet(
                autoscalerConfig, name, nodeShape);
        }

    }
}
