/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package dev.hathora.cloud_sdk.models.shared;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Objects;
/**
 * FleetRegion
 * 
 * <p>A fleet region is a region in which a fleet can be deployed.
 * You can update cloudMinVcpus once every five minutes. It must be a multiple of
 * scaleIncrementVcpus
 */

public class FleetRegion {

    @JsonProperty("cloudMinVcpus")
    private int cloudMinVcpus;

    @JsonProperty("cloudMinVcpusUpdatedAt")
    private OffsetDateTime cloudMinVcpusUpdatedAt;

    @JsonProperty("scaleIncrementVcpus")
    private int scaleIncrementVcpus;

    @JsonCreator
    public FleetRegion(
            @JsonProperty("cloudMinVcpus") int cloudMinVcpus,
            @JsonProperty("cloudMinVcpusUpdatedAt") OffsetDateTime cloudMinVcpusUpdatedAt,
            @JsonProperty("scaleIncrementVcpus") int scaleIncrementVcpus) {
        Utils.checkNotNull(cloudMinVcpus, "cloudMinVcpus");
        Utils.checkNotNull(cloudMinVcpusUpdatedAt, "cloudMinVcpusUpdatedAt");
        Utils.checkNotNull(scaleIncrementVcpus, "scaleIncrementVcpus");
        this.cloudMinVcpus = cloudMinVcpus;
        this.cloudMinVcpusUpdatedAt = cloudMinVcpusUpdatedAt;
        this.scaleIncrementVcpus = scaleIncrementVcpus;
    }

    @JsonIgnore
    public int cloudMinVcpus() {
        return cloudMinVcpus;
    }

    @JsonIgnore
    public OffsetDateTime cloudMinVcpusUpdatedAt() {
        return cloudMinVcpusUpdatedAt;
    }

    @JsonIgnore
    public int scaleIncrementVcpus() {
        return scaleIncrementVcpus;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public FleetRegion withCloudMinVcpus(int cloudMinVcpus) {
        Utils.checkNotNull(cloudMinVcpus, "cloudMinVcpus");
        this.cloudMinVcpus = cloudMinVcpus;
        return this;
    }

    public FleetRegion withCloudMinVcpusUpdatedAt(OffsetDateTime cloudMinVcpusUpdatedAt) {
        Utils.checkNotNull(cloudMinVcpusUpdatedAt, "cloudMinVcpusUpdatedAt");
        this.cloudMinVcpusUpdatedAt = cloudMinVcpusUpdatedAt;
        return this;
    }

    public FleetRegion withScaleIncrementVcpus(int scaleIncrementVcpus) {
        Utils.checkNotNull(scaleIncrementVcpus, "scaleIncrementVcpus");
        this.scaleIncrementVcpus = scaleIncrementVcpus;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FleetRegion other = (FleetRegion) o;
        return 
            Objects.deepEquals(this.cloudMinVcpus, other.cloudMinVcpus) &&
            Objects.deepEquals(this.cloudMinVcpusUpdatedAt, other.cloudMinVcpusUpdatedAt) &&
            Objects.deepEquals(this.scaleIncrementVcpus, other.scaleIncrementVcpus);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            cloudMinVcpus,
            cloudMinVcpusUpdatedAt,
            scaleIncrementVcpus);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FleetRegion.class,
                "cloudMinVcpus", cloudMinVcpus,
                "cloudMinVcpusUpdatedAt", cloudMinVcpusUpdatedAt,
                "scaleIncrementVcpus", scaleIncrementVcpus);
    }
    
    public final static class Builder {
 
        private Integer cloudMinVcpus;
 
        private OffsetDateTime cloudMinVcpusUpdatedAt;
 
        private Integer scaleIncrementVcpus;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder cloudMinVcpus(int cloudMinVcpus) {
            Utils.checkNotNull(cloudMinVcpus, "cloudMinVcpus");
            this.cloudMinVcpus = cloudMinVcpus;
            return this;
        }

        public Builder cloudMinVcpusUpdatedAt(OffsetDateTime cloudMinVcpusUpdatedAt) {
            Utils.checkNotNull(cloudMinVcpusUpdatedAt, "cloudMinVcpusUpdatedAt");
            this.cloudMinVcpusUpdatedAt = cloudMinVcpusUpdatedAt;
            return this;
        }

        public Builder scaleIncrementVcpus(int scaleIncrementVcpus) {
            Utils.checkNotNull(scaleIncrementVcpus, "scaleIncrementVcpus");
            this.scaleIncrementVcpus = scaleIncrementVcpus;
            return this;
        }
        
        public FleetRegion build() {
            return new FleetRegion(
                cloudMinVcpus,
                cloudMinVcpusUpdatedAt,
                scaleIncrementVcpus);
        }
    }
}

