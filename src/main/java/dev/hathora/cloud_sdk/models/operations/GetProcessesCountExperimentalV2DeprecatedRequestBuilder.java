/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.operations;

import static dev.hathora.cloud_sdk.operations.Operations.RequestOperation;

import dev.hathora.cloud_sdk.SDKConfiguration;
import dev.hathora.cloud_sdk.models.shared.ProcessStatus;
import dev.hathora.cloud_sdk.models.shared.Region;
import dev.hathora.cloud_sdk.operations.GetProcessesCountExperimentalV2Deprecated;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class GetProcessesCountExperimentalV2DeprecatedRequestBuilder {

    private Optional<String> appId = Optional.empty();
    private Optional<? extends List<Region>> region = Optional.empty();
    private Optional<? extends List<ProcessStatus>> status = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }
                
    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder region(List<Region> region) {
        Utils.checkNotNull(region, "region");
        this.region = Optional.of(region);
        return this;
    }

    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder region(Optional<? extends List<Region>> region) {
        Utils.checkNotNull(region, "region");
        this.region = region;
        return this;
    }
                
    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder status(List<ProcessStatus> status) {
        Utils.checkNotNull(status, "status");
        this.status = Optional.of(status);
        return this;
    }

    public GetProcessesCountExperimentalV2DeprecatedRequestBuilder status(Optional<? extends List<ProcessStatus>> status) {
        Utils.checkNotNull(status, "status");
        this.status = status;
        return this;
    }


    private GetProcessesCountExperimentalV2DeprecatedRequest buildRequest() {

        GetProcessesCountExperimentalV2DeprecatedRequest request = new GetProcessesCountExperimentalV2DeprecatedRequest(appId,
            region,
            status);

        return request;
    }

    public GetProcessesCountExperimentalV2DeprecatedResponse call() throws Exception {
        
        RequestOperation<GetProcessesCountExperimentalV2DeprecatedRequest, GetProcessesCountExperimentalV2DeprecatedResponse> operation
              = new GetProcessesCountExperimentalV2Deprecated.Sync(sdkConfiguration);
        GetProcessesCountExperimentalV2DeprecatedRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
