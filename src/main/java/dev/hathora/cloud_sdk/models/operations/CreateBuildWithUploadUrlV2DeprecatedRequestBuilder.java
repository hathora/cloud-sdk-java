/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.operations;

import static dev.hathora.cloud_sdk.operations.Operations.RequestOperation;

import dev.hathora.cloud_sdk.SDKConfiguration;
import dev.hathora.cloud_sdk.models.shared.CreateBuildParams;
import dev.hathora.cloud_sdk.operations.CreateBuildWithUploadUrlV2Deprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class CreateBuildWithUploadUrlV2DeprecatedRequestBuilder {

    private CreateBuildParams createBuildParams;
    private Optional<String> appId = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateBuildWithUploadUrlV2DeprecatedRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateBuildWithUploadUrlV2DeprecatedRequestBuilder createBuildParams(CreateBuildParams createBuildParams) {
        Utils.checkNotNull(createBuildParams, "createBuildParams");
        this.createBuildParams = createBuildParams;
        return this;
    }
                
    public CreateBuildWithUploadUrlV2DeprecatedRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public CreateBuildWithUploadUrlV2DeprecatedRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }


    private CreateBuildWithUploadUrlV2DeprecatedRequest buildRequest() {

        CreateBuildWithUploadUrlV2DeprecatedRequest request = new CreateBuildWithUploadUrlV2DeprecatedRequest(createBuildParams,
            appId);

        return request;
    }

    public CreateBuildWithUploadUrlV2DeprecatedResponse call() throws Exception {
        
        RequestOperation<CreateBuildWithUploadUrlV2DeprecatedRequest, CreateBuildWithUploadUrlV2DeprecatedResponse> operation
              = new CreateBuildWithUploadUrlV2Deprecated.Sync(sdkConfiguration, _headers);
        CreateBuildWithUploadUrlV2DeprecatedRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
