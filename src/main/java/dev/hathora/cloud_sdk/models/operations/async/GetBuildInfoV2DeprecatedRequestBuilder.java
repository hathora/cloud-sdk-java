/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.operations.async;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.SDKConfiguration;
import dev.hathora.cloud_sdk.models.operations.GetBuildInfoV2DeprecatedRequest;
import dev.hathora.cloud_sdk.operations.GetBuildInfoV2Deprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class GetBuildInfoV2DeprecatedRequestBuilder {

    private Optional<String> appId = Optional.empty();
    private Integer buildId;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public GetBuildInfoV2DeprecatedRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public GetBuildInfoV2DeprecatedRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public GetBuildInfoV2DeprecatedRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }

    public GetBuildInfoV2DeprecatedRequestBuilder buildId(int buildId) {
        Utils.checkNotNull(buildId, "buildId");
        this.buildId = buildId;
        return this;
    }


    private GetBuildInfoV2DeprecatedRequest buildRequest() {

        GetBuildInfoV2DeprecatedRequest request = new GetBuildInfoV2DeprecatedRequest(appId,
            buildId);

        return request;
    }

    public CompletableFuture<GetBuildInfoV2DeprecatedResponse> call() throws Exception {
        
        AsyncRequestOperation<GetBuildInfoV2DeprecatedRequest, GetBuildInfoV2DeprecatedResponse> operation
              = new GetBuildInfoV2Deprecated.Async(sdkConfiguration, _headers);
        GetBuildInfoV2DeprecatedRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
