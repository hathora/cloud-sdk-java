/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.operations;

import static dev.hathora.cloud_sdk.operations.Operations.RequestOperation;

import com.fasterxml.jackson.core.type.TypeReference;
import dev.hathora.cloud_sdk.SDKConfiguration;
import dev.hathora.cloud_sdk.models.shared.Region;
import dev.hathora.cloud_sdk.operations.ListActivePublicLobbiesDeprecatedV1;
import dev.hathora.cloud_sdk.utils.Headers;
import dev.hathora.cloud_sdk.utils.LazySingletonValue;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class ListActivePublicLobbiesDeprecatedV1RequestBuilder {

    private Optional<String> appId = Optional.empty();
    private Optional<Boolean> local = Utils.readDefaultOrConstValue(
                            "local",
                            "false",
                            new TypeReference<Optional<Boolean>>() {});
    private Optional<? extends Region> region = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public ListActivePublicLobbiesDeprecatedV1RequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public ListActivePublicLobbiesDeprecatedV1RequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public ListActivePublicLobbiesDeprecatedV1RequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }
                
    public ListActivePublicLobbiesDeprecatedV1RequestBuilder local(boolean local) {
        Utils.checkNotNull(local, "local");
        this.local = Optional.of(local);
        return this;
    }

    public ListActivePublicLobbiesDeprecatedV1RequestBuilder local(Optional<Boolean> local) {
        Utils.checkNotNull(local, "local");
        this.local = local;
        return this;
    }
                
    public ListActivePublicLobbiesDeprecatedV1RequestBuilder region(Region region) {
        Utils.checkNotNull(region, "region");
        this.region = Optional.of(region);
        return this;
    }

    public ListActivePublicLobbiesDeprecatedV1RequestBuilder region(Optional<? extends Region> region) {
        Utils.checkNotNull(region, "region");
        this.region = region;
        return this;
    }


    private ListActivePublicLobbiesDeprecatedV1Request buildRequest() {
        if (local == null) {
            local = _SINGLETON_VALUE_Local.value();
        }

        ListActivePublicLobbiesDeprecatedV1Request request = new ListActivePublicLobbiesDeprecatedV1Request(appId,
            local,
            region);

        return request;
    }

    public ListActivePublicLobbiesDeprecatedV1Response call() throws Exception {
        
        RequestOperation<ListActivePublicLobbiesDeprecatedV1Request, ListActivePublicLobbiesDeprecatedV1Response> operation
              = new ListActivePublicLobbiesDeprecatedV1.Sync(sdkConfiguration, _headers);
        ListActivePublicLobbiesDeprecatedV1Request request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }

    private static final LazySingletonValue<Optional<Boolean>> _SINGLETON_VALUE_Local =
            new LazySingletonValue<>(
                    "local",
                    "false",
                    new TypeReference<Optional<Boolean>>() {});
}
