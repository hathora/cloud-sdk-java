/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.operations.async;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.SDKConfiguration;
import dev.hathora.cloud_sdk.models.operations.InviteUserRequest;
import dev.hathora.cloud_sdk.models.shared.CreateUserInvite;
import dev.hathora.cloud_sdk.operations.InviteUser;
import dev.hathora.cloud_sdk.utils.Headers;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class InviteUserRequestBuilder {

    private CreateUserInvite createUserInvite;
    private String orgId;
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public InviteUserRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public InviteUserRequestBuilder createUserInvite(CreateUserInvite createUserInvite) {
        Utils.checkNotNull(createUserInvite, "createUserInvite");
        this.createUserInvite = createUserInvite;
        return this;
    }

    public InviteUserRequestBuilder orgId(String orgId) {
        Utils.checkNotNull(orgId, "orgId");
        this.orgId = orgId;
        return this;
    }


    private InviteUserRequest buildRequest() {

        InviteUserRequest request = new InviteUserRequest(createUserInvite,
            orgId);

        return request;
    }

    public CompletableFuture<InviteUserResponse> call() throws Exception {
        
        AsyncRequestOperation<InviteUserRequest, InviteUserResponse> operation
              = new InviteUser.Async(sdkConfiguration, _headers);
        InviteUserRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
