/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk.models.operations.async;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.SDKConfiguration;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbyRequest;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbyRequestBody;
import dev.hathora.cloud_sdk.models.operations.CreateLocalLobbySecurity;
import dev.hathora.cloud_sdk.operations.CreateLocalLobby;
import dev.hathora.cloud_sdk.utils.Headers;
import dev.hathora.cloud_sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class CreateLocalLobbyRequestBuilder {

    private CreateLocalLobbySecurity security;
    private CreateLocalLobbyRequestBody requestBody;
    private Optional<String> appId = Optional.empty();
    private Optional<String> roomId = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public CreateLocalLobbyRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public CreateLocalLobbyRequestBuilder security(CreateLocalLobbySecurity security) {
        Utils.checkNotNull(security, "security");
        this.security = security;
        return this;
    }

    public CreateLocalLobbyRequestBuilder requestBody(CreateLocalLobbyRequestBody requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }
                
    public CreateLocalLobbyRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public CreateLocalLobbyRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }
                
    public CreateLocalLobbyRequestBuilder roomId(String roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = Optional.of(roomId);
        return this;
    }

    public CreateLocalLobbyRequestBuilder roomId(Optional<String> roomId) {
        Utils.checkNotNull(roomId, "roomId");
        this.roomId = roomId;
        return this;
    }


    private CreateLocalLobbyRequest buildRequest() {

        CreateLocalLobbyRequest request = new CreateLocalLobbyRequest(requestBody,
            appId,
            roomId);

        return request;
    }

    public CompletableFuture<CreateLocalLobbyResponse> call() throws Exception {
        
        AsyncRequestOperation<CreateLocalLobbyRequest, CreateLocalLobbyResponse> operation
              = new CreateLocalLobby.Async(sdkConfiguration, security, _headers);
        CreateLocalLobbyRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
