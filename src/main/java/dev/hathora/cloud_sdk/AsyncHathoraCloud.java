/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import dev.hathora.cloud_sdk.utils.Headers;

/**
 * Hathora Cloud API: Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 */
public class AsyncHathoraCloud {
    private static final Headers _headers = Headers.EMPTY;

    private final AsyncAppsV1 appsV1;
    /**
     * Operations that allow you manage your [applications](https://hathora.dev/docs/concepts/hathora-entities#application).
     */
    private final AsyncAppsV2 appsV2;
    /**
     * Operations that allow you to generate a Hathora-signed [JSON web token (JWT)](https://jwt.io/) for [player authentication](https://hathora.dev/docs/lobbies-and-matchmaking/auth-service).
     */
    private final AsyncAuthV1 authV1;

    private final AsyncBillingV1 billingV1;

    private final AsyncBuildsV1 buildsV1;

    private final AsyncBuildsV2 buildsV2;
    /**
     * Operations that allow you create and manage your [builds](https://hathora.dev/docs/concepts/hathora-entities#build).
     */
    private final AsyncBuildsV3 buildsV3;

    private final AsyncDeploymentsV1 deploymentsV1;

    private final AsyncDeploymentsV2 deploymentsV2;
    /**
     * Operations that allow you configure and manage an application's [build](https://hathora.dev/docs/concepts/hathora-entities#build) at runtime.
     */
    private final AsyncDeploymentsV3 deploymentsV3;
    /**
     * Deprecated. Does not include latest Regions (missing Dallas region). Use [DiscoveryV2](https://hathora.dev/api#tag/DiscoveryV2).
     */
    private final AsyncDiscoveryV1 discoveryV1;
    /**
     * Service that allows clients to directly ping all Hathora regions to get latency information
     */
    private final AsyncDiscoveryV2 discoveryV2;
    /**
     * Operations to manage and view a [fleet](https://hathora.dev/docs/concepts/hathora-entities#fleet).
     */
    private final AsyncFleetsV1 fleetsV1;

    private final AsyncLobbiesV1 lobbiesV1;

    private final AsyncLobbiesV2 lobbiesV2;

    private final AsyncLobbiesV3 lobbiesV3;

    private final AsyncLogsV1 logsV1;

    private final AsyncManagementV1 managementV1;
    /**
     * Deprecated. Use [ProcessesV3#GetProcessMetrics](https://hathora.dev/api#tag/ProcessesV3/operation/GetProcessMetrics) to fetch metrics about a specific process.
     */
    private final AsyncMetricsV1 metricsV1;

    private final AsyncOrganizationsV1 organizationsV1;
    /**
     * Deprecated. Use [ProcessesV3](https://hathora.dev/api#tag/ProcessesV3).
     */
    private final AsyncProcessesV1 processesV1;
    /**
     * Deprecated. Use [ProcessesV3](https://hathora.dev/api#tag/ProcessesV3).
     */
    private final AsyncProcessesV2 processesV2;
    /**
     * Operations to get data on active and stopped [processes](https://hathora.dev/docs/concepts/hathora-entities#process).
     */
    private final AsyncProcessesV3 processesV3;

    private final AsyncRoomsV1 roomsV1;

    private final AsyncRoomsV2 roomsV2;

    private final AsyncTokensV1 tokensV1;

    public AsyncAppsV1 appsV1() {
        return appsV1;
    }
    /**
     * Operations that allow you manage your [applications](https://hathora.dev/docs/concepts/hathora-entities#application).
     */
    public AsyncAppsV2 appsV2() {
        return appsV2;
    }
    /**
     * Operations that allow you to generate a Hathora-signed [JSON web token (JWT)](https://jwt.io/) for [player authentication](https://hathora.dev/docs/lobbies-and-matchmaking/auth-service).
     */
    public AsyncAuthV1 authV1() {
        return authV1;
    }

    public AsyncBillingV1 billingV1() {
        return billingV1;
    }

    public AsyncBuildsV1 buildsV1() {
        return buildsV1;
    }

    public AsyncBuildsV2 buildsV2() {
        return buildsV2;
    }
    /**
     * Operations that allow you create and manage your [builds](https://hathora.dev/docs/concepts/hathora-entities#build).
     */
    public AsyncBuildsV3 buildsV3() {
        return buildsV3;
    }

    public AsyncDeploymentsV1 deploymentsV1() {
        return deploymentsV1;
    }

    public AsyncDeploymentsV2 deploymentsV2() {
        return deploymentsV2;
    }
    /**
     * Operations that allow you configure and manage an application's [build](https://hathora.dev/docs/concepts/hathora-entities#build) at runtime.
     */
    public AsyncDeploymentsV3 deploymentsV3() {
        return deploymentsV3;
    }
    /**
     * Deprecated. Does not include latest Regions (missing Dallas region). Use [DiscoveryV2](https://hathora.dev/api#tag/DiscoveryV2).
     */
    public AsyncDiscoveryV1 discoveryV1() {
        return discoveryV1;
    }
    /**
     * Service that allows clients to directly ping all Hathora regions to get latency information
     */
    public AsyncDiscoveryV2 discoveryV2() {
        return discoveryV2;
    }
    /**
     * Operations to manage and view a [fleet](https://hathora.dev/docs/concepts/hathora-entities#fleet).
     */
    public AsyncFleetsV1 fleetsV1() {
        return fleetsV1;
    }

    public AsyncLobbiesV1 lobbiesV1() {
        return lobbiesV1;
    }

    public AsyncLobbiesV2 lobbiesV2() {
        return lobbiesV2;
    }

    public AsyncLobbiesV3 lobbiesV3() {
        return lobbiesV3;
    }

    public AsyncLogsV1 logsV1() {
        return logsV1;
    }

    public AsyncManagementV1 managementV1() {
        return managementV1;
    }
    /**
     * Deprecated. Use [ProcessesV3#GetProcessMetrics](https://hathora.dev/api#tag/ProcessesV3/operation/GetProcessMetrics) to fetch metrics about a specific process.
     */
    public AsyncMetricsV1 metricsV1() {
        return metricsV1;
    }

    public AsyncOrganizationsV1 organizationsV1() {
        return organizationsV1;
    }
    /**
     * Deprecated. Use [ProcessesV3](https://hathora.dev/api#tag/ProcessesV3).
     */
    public AsyncProcessesV1 processesV1() {
        return processesV1;
    }
    /**
     * Deprecated. Use [ProcessesV3](https://hathora.dev/api#tag/ProcessesV3).
     */
    public AsyncProcessesV2 processesV2() {
        return processesV2;
    }
    /**
     * Operations to get data on active and stopped [processes](https://hathora.dev/docs/concepts/hathora-entities#process).
     */
    public AsyncProcessesV3 processesV3() {
        return processesV3;
    }

    public AsyncRoomsV1 roomsV1() {
        return roomsV1;
    }

    public AsyncRoomsV2 roomsV2() {
        return roomsV2;
    }

    public AsyncTokensV1 tokensV1() {
        return tokensV1;
    }

    private final SDKConfiguration sdkConfiguration;
    private final HathoraCloud syncSDK;

    AsyncHathoraCloud(HathoraCloud syncSDK, SDKConfiguration sdkConfiguration) {
        this.syncSDK = syncSDK;
        this.sdkConfiguration = sdkConfiguration;
        this.appsV1 = new AsyncAppsV1(syncSDK.appsV1(), sdkConfiguration);
        this.appsV2 = new AsyncAppsV2(syncSDK.appsV2(), sdkConfiguration);
        this.authV1 = new AsyncAuthV1(syncSDK.authV1(), sdkConfiguration);
        this.billingV1 = new AsyncBillingV1(syncSDK.billingV1(), sdkConfiguration);
        this.buildsV1 = new AsyncBuildsV1(syncSDK.buildsV1(), sdkConfiguration);
        this.buildsV2 = new AsyncBuildsV2(syncSDK.buildsV2(), sdkConfiguration);
        this.buildsV3 = new AsyncBuildsV3(syncSDK.buildsV3(), sdkConfiguration);
        this.deploymentsV1 = new AsyncDeploymentsV1(syncSDK.deploymentsV1(), sdkConfiguration);
        this.deploymentsV2 = new AsyncDeploymentsV2(syncSDK.deploymentsV2(), sdkConfiguration);
        this.deploymentsV3 = new AsyncDeploymentsV3(syncSDK.deploymentsV3(), sdkConfiguration);
        this.discoveryV1 = new AsyncDiscoveryV1(syncSDK.discoveryV1(), sdkConfiguration);
        this.discoveryV2 = new AsyncDiscoveryV2(syncSDK.discoveryV2(), sdkConfiguration);
        this.fleetsV1 = new AsyncFleetsV1(syncSDK.fleetsV1(), sdkConfiguration);
        this.lobbiesV1 = new AsyncLobbiesV1(syncSDK.lobbiesV1(), sdkConfiguration);
        this.lobbiesV2 = new AsyncLobbiesV2(syncSDK.lobbiesV2(), sdkConfiguration);
        this.lobbiesV3 = new AsyncLobbiesV3(syncSDK.lobbiesV3(), sdkConfiguration);
        this.logsV1 = new AsyncLogsV1(syncSDK.logsV1(), sdkConfiguration);
        this.managementV1 = new AsyncManagementV1(syncSDK.managementV1(), sdkConfiguration);
        this.metricsV1 = new AsyncMetricsV1(syncSDK.metricsV1(), sdkConfiguration);
        this.organizationsV1 = new AsyncOrganizationsV1(syncSDK.organizationsV1(), sdkConfiguration);
        this.processesV1 = new AsyncProcessesV1(syncSDK.processesV1(), sdkConfiguration);
        this.processesV2 = new AsyncProcessesV2(syncSDK.processesV2(), sdkConfiguration);
        this.processesV3 = new AsyncProcessesV3(syncSDK.processesV3(), sdkConfiguration);
        this.roomsV1 = new AsyncRoomsV1(syncSDK.roomsV1(), sdkConfiguration);
        this.roomsV2 = new AsyncRoomsV2(syncSDK.roomsV2(), sdkConfiguration);
        this.tokensV1 = new AsyncTokensV1(syncSDK.tokensV1(), sdkConfiguration);
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public HathoraCloud sync() {
        return syncSDK;
    }
}
