/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateDeploymentV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetDeploymentInfoV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetDeploymentsV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetLatestDeploymentV1DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.async.CreateDeploymentV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateDeploymentV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentInfoV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentInfoV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentsV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetDeploymentsV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetLatestDeploymentV1DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetLatestDeploymentV1DeprecatedResponse;
import dev.hathora.cloud_sdk.models.shared.DeploymentConfig;
import dev.hathora.cloud_sdk.operations.CreateDeploymentV1Deprecated;
import dev.hathora.cloud_sdk.operations.GetDeploymentInfoV1Deprecated;
import dev.hathora.cloud_sdk.operations.GetDeploymentsV1Deprecated;
import dev.hathora.cloud_sdk.operations.GetLatestDeploymentV1Deprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Deprecated;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncDeploymentsV1 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final DeploymentsV1 syncSDK;

    AsyncDeploymentsV1(DeploymentsV1 syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public DeploymentsV1 sync() {
        return syncSDK;
    }


    /**
     * CreateDeploymentV1Deprecated
     * 
     * <p>Create a new [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment). Creating a new deployment means all new rooms created will use the latest deployment configuration, but existing games in progress will not be affected.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateDeploymentV1DeprecatedRequestBuilder createDeploymentV1Deprecated() {
        return new CreateDeploymentV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateDeploymentV1Deprecated
     * 
     * <p>Create a new [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment). Creating a new deployment means all new rooms created will use the latest deployment configuration, but existing games in progress will not be affected.
     * 
     * @param deploymentConfig User specified deployment configuration for your application at runtime.
     * @param buildId 
     * @return CompletableFuture&lt;CreateDeploymentV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateDeploymentV1DeprecatedResponse> createDeploymentV1Deprecated(DeploymentConfig deploymentConfig, int buildId) {
        return createDeploymentV1Deprecated(deploymentConfig, Optional.empty(), buildId);
    }

    /**
     * CreateDeploymentV1Deprecated
     * 
     * <p>Create a new [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment). Creating a new deployment means all new rooms created will use the latest deployment configuration, but existing games in progress will not be affected.
     * 
     * @param deploymentConfig User specified deployment configuration for your application at runtime.
     * @param appId 
     * @param buildId 
     * @return CompletableFuture&lt;CreateDeploymentV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateDeploymentV1DeprecatedResponse> createDeploymentV1Deprecated(
            DeploymentConfig deploymentConfig, Optional<String> appId,
            int buildId) {
        CreateDeploymentV1DeprecatedRequest request =
            CreateDeploymentV1DeprecatedRequest
                .builder()
                .deploymentConfig(deploymentConfig)
                .appId(appId)
                .buildId(buildId)
                .build();
        AsyncRequestOperation<CreateDeploymentV1DeprecatedRequest, CreateDeploymentV1DeprecatedResponse> operation
              = new CreateDeploymentV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetDeploymentInfoV1Deprecated
     * 
     * <p>Get details for a [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetDeploymentInfoV1DeprecatedRequestBuilder getDeploymentInfoV1Deprecated() {
        return new GetDeploymentInfoV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetDeploymentInfoV1Deprecated
     * 
     * <p>Get details for a [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment).
     * 
     * @param deploymentId 
     * @return CompletableFuture&lt;GetDeploymentInfoV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentInfoV1DeprecatedResponse> getDeploymentInfoV1Deprecated(int deploymentId) {
        return getDeploymentInfoV1Deprecated(Optional.empty(), deploymentId);
    }

    /**
     * GetDeploymentInfoV1Deprecated
     * 
     * <p>Get details for a [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment).
     * 
     * @param appId 
     * @param deploymentId 
     * @return CompletableFuture&lt;GetDeploymentInfoV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentInfoV1DeprecatedResponse> getDeploymentInfoV1Deprecated(Optional<String> appId, int deploymentId) {
        GetDeploymentInfoV1DeprecatedRequest request =
            GetDeploymentInfoV1DeprecatedRequest
                .builder()
                .appId(appId)
                .deploymentId(deploymentId)
                .build();
        AsyncRequestOperation<GetDeploymentInfoV1DeprecatedRequest, GetDeploymentInfoV1DeprecatedResponse> operation
              = new GetDeploymentInfoV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetDeploymentsV1Deprecated
     * 
     * <p>Returns an array of [deployments](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetDeploymentsV1DeprecatedRequestBuilder getDeploymentsV1Deprecated() {
        return new GetDeploymentsV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetDeploymentsV1Deprecated
     * 
     * <p>Returns an array of [deployments](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return CompletableFuture&lt;GetDeploymentsV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentsV1DeprecatedResponse> getDeploymentsV1DeprecatedDirect() {
        return getDeploymentsV1Deprecated(Optional.empty());
    }

    /**
     * GetDeploymentsV1Deprecated
     * 
     * <p>Returns an array of [deployments](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param appId 
     * @return CompletableFuture&lt;GetDeploymentsV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetDeploymentsV1DeprecatedResponse> getDeploymentsV1Deprecated(Optional<String> appId) {
        GetDeploymentsV1DeprecatedRequest request =
            GetDeploymentsV1DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<GetDeploymentsV1DeprecatedRequest, GetDeploymentsV1DeprecatedResponse> operation
              = new GetDeploymentsV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetLatestDeploymentV1Deprecated
     * 
     * <p>Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetLatestDeploymentV1DeprecatedRequestBuilder getLatestDeploymentV1Deprecated() {
        return new GetLatestDeploymentV1DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetLatestDeploymentV1Deprecated
     * 
     * <p>Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return CompletableFuture&lt;GetLatestDeploymentV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetLatestDeploymentV1DeprecatedResponse> getLatestDeploymentV1DeprecatedDirect() {
        return getLatestDeploymentV1Deprecated(Optional.empty());
    }

    /**
     * GetLatestDeploymentV1Deprecated
     * 
     * <p>Get the latest [deployment](https://hathora.dev/docs/concepts/hathora-entities#deployment) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param appId 
     * @return CompletableFuture&lt;GetLatestDeploymentV1DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetLatestDeploymentV1DeprecatedResponse> getLatestDeploymentV1Deprecated(Optional<String> appId) {
        GetLatestDeploymentV1DeprecatedRequest request =
            GetLatestDeploymentV1DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<GetLatestDeploymentV1DeprecatedRequest, GetLatestDeploymentV1DeprecatedResponse> operation
              = new GetLatestDeploymentV1Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
