/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.RequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateBuildDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.CreateBuildDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreateBuildDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.DeleteBuildDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.DeleteBuildDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.DeleteBuildDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.GetBuildInfoDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetBuildInfoDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.GetBuildInfoDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.GetBuildsDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetBuildsDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.GetBuildsDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.RunBuildDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.RunBuildDeprecatedRequestBody;
import dev.hathora.cloud_sdk.models.operations.RunBuildDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.RunBuildDeprecatedResponse;
import dev.hathora.cloud_sdk.models.shared.CreateBuildParams;
import dev.hathora.cloud_sdk.operations.CreateBuildDeprecated;
import dev.hathora.cloud_sdk.operations.DeleteBuildDeprecated;
import dev.hathora.cloud_sdk.operations.GetBuildInfoDeprecated;
import dev.hathora.cloud_sdk.operations.GetBuildsDeprecated;
import dev.hathora.cloud_sdk.operations.RunBuildDeprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Deprecated;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class BuildsV1 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncBuildsV1 asyncSDK;

    BuildsV1(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncBuildsV1(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncBuildsV1 async() {
        return asyncSDK;
    }

    /**
     * CreateBuildDeprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build). Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateBuildDeprecatedRequestBuilder createBuildDeprecated() {
        return new CreateBuildDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateBuildDeprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build). Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createBuildParams 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateBuildDeprecatedResponse createBuildDeprecated(CreateBuildParams createBuildParams) throws Exception {
        return createBuildDeprecated(createBuildParams, Optional.empty());
    }

    /**
     * CreateBuildDeprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build). Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createBuildParams 
     * @param appId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateBuildDeprecatedResponse createBuildDeprecated(CreateBuildParams createBuildParams, Optional<String> appId) throws Exception {
        CreateBuildDeprecatedRequest request =
            CreateBuildDeprecatedRequest
                .builder()
                .createBuildParams(createBuildParams)
                .appId(appId)
                .build();
        RequestOperation<CreateBuildDeprecatedRequest, CreateBuildDeprecatedResponse> operation
              = new CreateBuildDeprecated.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * DeleteBuildDeprecated
     * 
     * <p>Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public DeleteBuildDeprecatedRequestBuilder deleteBuildDeprecated() {
        return new DeleteBuildDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * DeleteBuildDeprecated
     * 
     * <p>Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
     * 
     * @param buildId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public DeleteBuildDeprecatedResponse deleteBuildDeprecated(int buildId) throws Exception {
        return deleteBuildDeprecated(Optional.empty(), buildId);
    }

    /**
     * DeleteBuildDeprecated
     * 
     * <p>Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
     * 
     * @param appId 
     * @param buildId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public DeleteBuildDeprecatedResponse deleteBuildDeprecated(Optional<String> appId, int buildId) throws Exception {
        DeleteBuildDeprecatedRequest request =
            DeleteBuildDeprecatedRequest
                .builder()
                .appId(appId)
                .buildId(buildId)
                .build();
        RequestOperation<DeleteBuildDeprecatedRequest, DeleteBuildDeprecatedResponse> operation
              = new DeleteBuildDeprecated.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * GetBuildInfoDeprecated
     * 
     * <p>Get details for a [build](https://hathora.dev/docs/concepts/hathora-entities#build).
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildInfoDeprecatedRequestBuilder getBuildInfoDeprecated() {
        return new GetBuildInfoDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetBuildInfoDeprecated
     * 
     * <p>Get details for a [build](https://hathora.dev/docs/concepts/hathora-entities#build).
     * 
     * @param buildId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildInfoDeprecatedResponse getBuildInfoDeprecated(int buildId) throws Exception {
        return getBuildInfoDeprecated(Optional.empty(), buildId);
    }

    /**
     * GetBuildInfoDeprecated
     * 
     * <p>Get details for a [build](https://hathora.dev/docs/concepts/hathora-entities#build).
     * 
     * @param appId 
     * @param buildId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildInfoDeprecatedResponse getBuildInfoDeprecated(Optional<String> appId, int buildId) throws Exception {
        GetBuildInfoDeprecatedRequest request =
            GetBuildInfoDeprecatedRequest
                .builder()
                .appId(appId)
                .buildId(buildId)
                .build();
        RequestOperation<GetBuildInfoDeprecatedRequest, GetBuildInfoDeprecatedResponse> operation
              = new GetBuildInfoDeprecated.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * GetBuildsDeprecated
     * 
     * <p>Returns an array of [builds](https://hathora.dev/docs/concepts/hathora-entities#build) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildsDeprecatedRequestBuilder getBuildsDeprecated() {
        return new GetBuildsDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetBuildsDeprecated
     * 
     * <p>Returns an array of [builds](https://hathora.dev/docs/concepts/hathora-entities#build) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildsDeprecatedResponse getBuildsDeprecatedDirect() throws Exception {
        return getBuildsDeprecated(Optional.empty());
    }

    /**
     * GetBuildsDeprecated
     * 
     * <p>Returns an array of [builds](https://hathora.dev/docs/concepts/hathora-entities#build) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param appId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildsDeprecatedResponse getBuildsDeprecated(Optional<String> appId) throws Exception {
        GetBuildsDeprecatedRequest request =
            GetBuildsDeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        RequestOperation<GetBuildsDeprecatedRequest, GetBuildsDeprecatedResponse> operation
              = new GetBuildsDeprecated.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * RunBuildDeprecated
     * 
     * <p>Builds a game server artifact from a tarball you provide. Pass in the `buildId` generated from [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild).
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RunBuildDeprecatedRequestBuilder runBuildDeprecated() {
        return new RunBuildDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * RunBuildDeprecated
     * 
     * <p>Builds a game server artifact from a tarball you provide. Pass in the `buildId` generated from [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild).
     * 
     * @param requestBody 
     * @param buildId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RunBuildDeprecatedResponse runBuildDeprecated(RunBuildDeprecatedRequestBody requestBody, int buildId) throws Exception {
        return runBuildDeprecated(requestBody, Optional.empty(), buildId);
    }

    /**
     * RunBuildDeprecated
     * 
     * <p>Builds a game server artifact from a tarball you provide. Pass in the `buildId` generated from [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild).
     * 
     * @param requestBody 
     * @param appId 
     * @param buildId 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RunBuildDeprecatedResponse runBuildDeprecated(
            RunBuildDeprecatedRequestBody requestBody, Optional<String> appId,
            int buildId) throws Exception {
        RunBuildDeprecatedRequest request =
            RunBuildDeprecatedRequest
                .builder()
                .requestBody(requestBody)
                .appId(appId)
                .buildId(buildId)
                .build();
        RequestOperation<RunBuildDeprecatedRequest, RunBuildDeprecatedResponse> operation
              = new RunBuildDeprecated.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
