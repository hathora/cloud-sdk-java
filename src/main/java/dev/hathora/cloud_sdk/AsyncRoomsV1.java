/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateRoomDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.DestroyRoomDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetActiveRoomsForProcessDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetConnectionInfoDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetInactiveRoomsForProcessDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetRoomInfoDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.SuspendRoomDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.async.CreateRoomDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateRoomDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.DestroyRoomDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.DestroyRoomDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetActiveRoomsForProcessDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetActiveRoomsForProcessDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetConnectionInfoDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetConnectionInfoDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetInactiveRoomsForProcessDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetInactiveRoomsForProcessDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetRoomInfoDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetRoomInfoDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.SuspendRoomDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.SuspendRoomDeprecatedResponse;
import dev.hathora.cloud_sdk.models.shared.CreateRoomParams;
import dev.hathora.cloud_sdk.operations.CreateRoomDeprecated;
import dev.hathora.cloud_sdk.operations.DestroyRoomDeprecated;
import dev.hathora.cloud_sdk.operations.GetActiveRoomsForProcessDeprecated;
import dev.hathora.cloud_sdk.operations.GetConnectionInfoDeprecated;
import dev.hathora.cloud_sdk.operations.GetInactiveRoomsForProcessDeprecated;
import dev.hathora.cloud_sdk.operations.GetRoomInfoDeprecated;
import dev.hathora.cloud_sdk.operations.SuspendRoomDeprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Deprecated;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncRoomsV1 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final RoomsV1 syncSDK;

    AsyncRoomsV1(RoomsV1 syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public RoomsV1 sync() {
        return syncSDK;
    }


    /**
     * CreateRoomDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateRoomDeprecatedRequestBuilder createRoomDeprecated() {
        return new CreateRoomDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateRoomDeprecated
     * 
     * @param createRoomParams 
     * @return CompletableFuture&lt;CreateRoomDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateRoomDeprecatedResponse> createRoomDeprecated(CreateRoomParams createRoomParams) {
        return createRoomDeprecated(createRoomParams, Optional.empty(), Optional.empty());
    }

    /**
     * CreateRoomDeprecated
     * 
     * @param createRoomParams 
     * @param appId 
     * @param roomId 
     * @return CompletableFuture&lt;CreateRoomDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateRoomDeprecatedResponse> createRoomDeprecated(
            CreateRoomParams createRoomParams, Optional<String> appId,
            Optional<String> roomId) {
        CreateRoomDeprecatedRequest request =
            CreateRoomDeprecatedRequest
                .builder()
                .createRoomParams(createRoomParams)
                .appId(appId)
                .roomId(roomId)
                .build();
        AsyncRequestOperation<CreateRoomDeprecatedRequest, CreateRoomDeprecatedResponse> operation
              = new CreateRoomDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * DestroyRoomDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public DestroyRoomDeprecatedRequestBuilder destroyRoomDeprecated() {
        return new DestroyRoomDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * DestroyRoomDeprecated
     * 
     * @param roomId 
     * @return CompletableFuture&lt;DestroyRoomDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<DestroyRoomDeprecatedResponse> destroyRoomDeprecated(String roomId) {
        return destroyRoomDeprecated(Optional.empty(), roomId);
    }

    /**
     * DestroyRoomDeprecated
     * 
     * @param appId 
     * @param roomId 
     * @return CompletableFuture&lt;DestroyRoomDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<DestroyRoomDeprecatedResponse> destroyRoomDeprecated(Optional<String> appId, String roomId) {
        DestroyRoomDeprecatedRequest request =
            DestroyRoomDeprecatedRequest
                .builder()
                .appId(appId)
                .roomId(roomId)
                .build();
        AsyncRequestOperation<DestroyRoomDeprecatedRequest, DestroyRoomDeprecatedResponse> operation
              = new DestroyRoomDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetActiveRoomsForProcessDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetActiveRoomsForProcessDeprecatedRequestBuilder getActiveRoomsForProcessDeprecated() {
        return new GetActiveRoomsForProcessDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetActiveRoomsForProcessDeprecated
     * 
     * @param processId 
     * @return CompletableFuture&lt;GetActiveRoomsForProcessDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetActiveRoomsForProcessDeprecatedResponse> getActiveRoomsForProcessDeprecated(String processId) {
        return getActiveRoomsForProcessDeprecated(Optional.empty(), processId);
    }

    /**
     * GetActiveRoomsForProcessDeprecated
     * 
     * @param appId 
     * @param processId 
     * @return CompletableFuture&lt;GetActiveRoomsForProcessDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetActiveRoomsForProcessDeprecatedResponse> getActiveRoomsForProcessDeprecated(Optional<String> appId, String processId) {
        GetActiveRoomsForProcessDeprecatedRequest request =
            GetActiveRoomsForProcessDeprecatedRequest
                .builder()
                .appId(appId)
                .processId(processId)
                .build();
        AsyncRequestOperation<GetActiveRoomsForProcessDeprecatedRequest, GetActiveRoomsForProcessDeprecatedResponse> operation
              = new GetActiveRoomsForProcessDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetConnectionInfoDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetConnectionInfoDeprecatedRequestBuilder getConnectionInfoDeprecated() {
        return new GetConnectionInfoDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetConnectionInfoDeprecated
     * 
     * @param roomId 
     * @return CompletableFuture&lt;GetConnectionInfoDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetConnectionInfoDeprecatedResponse> getConnectionInfoDeprecated(String roomId) {
        return getConnectionInfoDeprecated(Optional.empty(), roomId);
    }

    /**
     * GetConnectionInfoDeprecated
     * 
     * @param appId 
     * @param roomId 
     * @return CompletableFuture&lt;GetConnectionInfoDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetConnectionInfoDeprecatedResponse> getConnectionInfoDeprecated(Optional<String> appId, String roomId) {
        GetConnectionInfoDeprecatedRequest request =
            GetConnectionInfoDeprecatedRequest
                .builder()
                .appId(appId)
                .roomId(roomId)
                .build();
        AsyncRequestOperation<GetConnectionInfoDeprecatedRequest, GetConnectionInfoDeprecatedResponse> operation
              = new GetConnectionInfoDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetInactiveRoomsForProcessDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetInactiveRoomsForProcessDeprecatedRequestBuilder getInactiveRoomsForProcessDeprecated() {
        return new GetInactiveRoomsForProcessDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetInactiveRoomsForProcessDeprecated
     * 
     * @param processId 
     * @return CompletableFuture&lt;GetInactiveRoomsForProcessDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetInactiveRoomsForProcessDeprecatedResponse> getInactiveRoomsForProcessDeprecated(String processId) {
        return getInactiveRoomsForProcessDeprecated(Optional.empty(), processId);
    }

    /**
     * GetInactiveRoomsForProcessDeprecated
     * 
     * @param appId 
     * @param processId 
     * @return CompletableFuture&lt;GetInactiveRoomsForProcessDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetInactiveRoomsForProcessDeprecatedResponse> getInactiveRoomsForProcessDeprecated(Optional<String> appId, String processId) {
        GetInactiveRoomsForProcessDeprecatedRequest request =
            GetInactiveRoomsForProcessDeprecatedRequest
                .builder()
                .appId(appId)
                .processId(processId)
                .build();
        AsyncRequestOperation<GetInactiveRoomsForProcessDeprecatedRequest, GetInactiveRoomsForProcessDeprecatedResponse> operation
              = new GetInactiveRoomsForProcessDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetRoomInfoDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetRoomInfoDeprecatedRequestBuilder getRoomInfoDeprecated() {
        return new GetRoomInfoDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetRoomInfoDeprecated
     * 
     * @param roomId 
     * @return CompletableFuture&lt;GetRoomInfoDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetRoomInfoDeprecatedResponse> getRoomInfoDeprecated(String roomId) {
        return getRoomInfoDeprecated(Optional.empty(), roomId);
    }

    /**
     * GetRoomInfoDeprecated
     * 
     * @param appId 
     * @param roomId 
     * @return CompletableFuture&lt;GetRoomInfoDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetRoomInfoDeprecatedResponse> getRoomInfoDeprecated(Optional<String> appId, String roomId) {
        GetRoomInfoDeprecatedRequest request =
            GetRoomInfoDeprecatedRequest
                .builder()
                .appId(appId)
                .roomId(roomId)
                .build();
        AsyncRequestOperation<GetRoomInfoDeprecatedRequest, GetRoomInfoDeprecatedResponse> operation
              = new GetRoomInfoDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * SuspendRoomDeprecated
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public SuspendRoomDeprecatedRequestBuilder suspendRoomDeprecated() {
        return new SuspendRoomDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * SuspendRoomDeprecated
     * 
     * @param roomId 
     * @return CompletableFuture&lt;SuspendRoomDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<SuspendRoomDeprecatedResponse> suspendRoomDeprecated(String roomId) {
        return suspendRoomDeprecated(Optional.empty(), roomId);
    }

    /**
     * SuspendRoomDeprecated
     * 
     * @param appId 
     * @param roomId 
     * @return CompletableFuture&lt;SuspendRoomDeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<SuspendRoomDeprecatedResponse> suspendRoomDeprecated(Optional<String> appId, String roomId) {
        SuspendRoomDeprecatedRequest request =
            SuspendRoomDeprecatedRequest
                .builder()
                .appId(appId)
                .roomId(roomId)
                .build();
        AsyncRequestOperation<SuspendRoomDeprecatedRequest, SuspendRoomDeprecatedResponse> operation
              = new SuspendRoomDeprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
