/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateBuildV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.CreateBuildWithUploadUrlV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.CreateWithMultipartUploadsV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.DeleteBuildV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetBuildInfoV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.GetBuildsV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.RunBuildV2DeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.RunBuildV2DeprecatedRequestBody;
import dev.hathora.cloud_sdk.models.operations.async.CreateBuildV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateBuildV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.CreateBuildWithUploadUrlV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateBuildWithUploadUrlV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.CreateWithMultipartUploadsV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateWithMultipartUploadsV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.DeleteBuildV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.DeleteBuildV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetBuildInfoV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetBuildInfoV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetBuildsV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetBuildsV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.async.RunBuildV2DeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.RunBuildV2DeprecatedResponse;
import dev.hathora.cloud_sdk.models.shared.CreateBuildParams;
import dev.hathora.cloud_sdk.models.shared.CreateMultipartBuildParams;
import dev.hathora.cloud_sdk.operations.CreateBuildV2Deprecated;
import dev.hathora.cloud_sdk.operations.CreateBuildWithUploadUrlV2Deprecated;
import dev.hathora.cloud_sdk.operations.CreateWithMultipartUploadsV2Deprecated;
import dev.hathora.cloud_sdk.operations.DeleteBuildV2Deprecated;
import dev.hathora.cloud_sdk.operations.GetBuildInfoV2Deprecated;
import dev.hathora.cloud_sdk.operations.GetBuildsV2Deprecated;
import dev.hathora.cloud_sdk.operations.RunBuildV2Deprecated;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Deprecated;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncBuildsV2 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final BuildsV2 syncSDK;

    AsyncBuildsV2(BuildsV2 syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public BuildsV2 sync() {
        return syncSDK;
    }


    /**
     * CreateBuildV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build). Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateBuildV2DeprecatedRequestBuilder createBuildV2Deprecated() {
        return new CreateBuildV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateBuildV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build). Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createBuildParams 
     * @return CompletableFuture&lt;CreateBuildV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateBuildV2DeprecatedResponse> createBuildV2Deprecated(CreateBuildParams createBuildParams) {
        return createBuildV2Deprecated(createBuildParams, Optional.empty());
    }

    /**
     * CreateBuildV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build). Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createBuildParams 
     * @param appId 
     * @return CompletableFuture&lt;CreateBuildV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateBuildV2DeprecatedResponse> createBuildV2Deprecated(CreateBuildParams createBuildParams, Optional<String> appId) {
        CreateBuildV2DeprecatedRequest request =
            CreateBuildV2DeprecatedRequest
                .builder()
                .createBuildParams(createBuildParams)
                .appId(appId)
                .build();
        AsyncRequestOperation<CreateBuildV2DeprecatedRequest, CreateBuildV2DeprecatedResponse> operation
              = new CreateBuildV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * CreateBuildWithUploadUrlV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build) with `uploadUrl` that can be used to upload the build to before calling `runBuild`. Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateBuildWithUploadUrlV2DeprecatedRequestBuilder createBuildWithUploadUrlV2Deprecated() {
        return new CreateBuildWithUploadUrlV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateBuildWithUploadUrlV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build) with `uploadUrl` that can be used to upload the build to before calling `runBuild`. Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createBuildParams 
     * @return CompletableFuture&lt;CreateBuildWithUploadUrlV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateBuildWithUploadUrlV2DeprecatedResponse> createBuildWithUploadUrlV2Deprecated(CreateBuildParams createBuildParams) {
        return createBuildWithUploadUrlV2Deprecated(createBuildParams, Optional.empty());
    }

    /**
     * CreateBuildWithUploadUrlV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build) with `uploadUrl` that can be used to upload the build to before calling `runBuild`. Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createBuildParams 
     * @param appId 
     * @return CompletableFuture&lt;CreateBuildWithUploadUrlV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateBuildWithUploadUrlV2DeprecatedResponse> createBuildWithUploadUrlV2Deprecated(CreateBuildParams createBuildParams, Optional<String> appId) {
        CreateBuildWithUploadUrlV2DeprecatedRequest request =
            CreateBuildWithUploadUrlV2DeprecatedRequest
                .builder()
                .createBuildParams(createBuildParams)
                .appId(appId)
                .build();
        AsyncRequestOperation<CreateBuildWithUploadUrlV2DeprecatedRequest, CreateBuildWithUploadUrlV2DeprecatedResponse> operation
              = new CreateBuildWithUploadUrlV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * CreateWithMultipartUploadsV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build) with optional `multipartUploadUrls` that can be used to upload larger builds in parts before calling `runBuild`. Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreateWithMultipartUploadsV2DeprecatedRequestBuilder createWithMultipartUploadsV2Deprecated() {
        return new CreateWithMultipartUploadsV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateWithMultipartUploadsV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build) with optional `multipartUploadUrls` that can be used to upload larger builds in parts before calling `runBuild`. Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createMultipartBuildParams 
     * @return CompletableFuture&lt;CreateWithMultipartUploadsV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateWithMultipartUploadsV2DeprecatedResponse> createWithMultipartUploadsV2Deprecated(CreateMultipartBuildParams createMultipartBuildParams) {
        return createWithMultipartUploadsV2Deprecated(createMultipartBuildParams, Optional.empty());
    }

    /**
     * CreateWithMultipartUploadsV2Deprecated
     * 
     * <p>Creates a new [build](https://hathora.dev/docs/concepts/hathora-entities#build) with optional `multipartUploadUrls` that can be used to upload larger builds in parts before calling `runBuild`. Responds with a `buildId` that you must pass to [`RunBuild()`](https://hathora.dev/api#tag/BuildV1/operation/RunBuild) to build the game server artifact. You can optionally pass in a `buildTag` to associate an external version with a build.
     * 
     * @param createMultipartBuildParams 
     * @param appId 
     * @return CompletableFuture&lt;CreateWithMultipartUploadsV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<CreateWithMultipartUploadsV2DeprecatedResponse> createWithMultipartUploadsV2Deprecated(CreateMultipartBuildParams createMultipartBuildParams, Optional<String> appId) {
        CreateWithMultipartUploadsV2DeprecatedRequest request =
            CreateWithMultipartUploadsV2DeprecatedRequest
                .builder()
                .createMultipartBuildParams(createMultipartBuildParams)
                .appId(appId)
                .build();
        AsyncRequestOperation<CreateWithMultipartUploadsV2DeprecatedRequest, CreateWithMultipartUploadsV2DeprecatedResponse> operation
              = new CreateWithMultipartUploadsV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * DeleteBuildV2Deprecated
     * 
     * <p>Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public DeleteBuildV2DeprecatedRequestBuilder deleteBuildV2Deprecated() {
        return new DeleteBuildV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * DeleteBuildV2Deprecated
     * 
     * <p>Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
     * 
     * @param buildId 
     * @return CompletableFuture&lt;DeleteBuildV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<DeleteBuildV2DeprecatedResponse> deleteBuildV2Deprecated(int buildId) {
        return deleteBuildV2Deprecated(Optional.empty(), buildId);
    }

    /**
     * DeleteBuildV2Deprecated
     * 
     * <p>Delete a [build](https://hathora.dev/docs/concepts/hathora-entities#build). All associated metadata is deleted.
     * 
     * @param appId 
     * @param buildId 
     * @return CompletableFuture&lt;DeleteBuildV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<DeleteBuildV2DeprecatedResponse> deleteBuildV2Deprecated(Optional<String> appId, int buildId) {
        DeleteBuildV2DeprecatedRequest request =
            DeleteBuildV2DeprecatedRequest
                .builder()
                .appId(appId)
                .buildId(buildId)
                .build();
        AsyncRequestOperation<DeleteBuildV2DeprecatedRequest, DeleteBuildV2DeprecatedResponse> operation
              = new DeleteBuildV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetBuildInfoV2Deprecated
     * 
     * <p>Get details for a [build](https://hathora.dev/docs/concepts/hathora-entities#build).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildInfoV2DeprecatedRequestBuilder getBuildInfoV2Deprecated() {
        return new GetBuildInfoV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetBuildInfoV2Deprecated
     * 
     * <p>Get details for a [build](https://hathora.dev/docs/concepts/hathora-entities#build).
     * 
     * @param buildId 
     * @return CompletableFuture&lt;GetBuildInfoV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetBuildInfoV2DeprecatedResponse> getBuildInfoV2Deprecated(int buildId) {
        return getBuildInfoV2Deprecated(Optional.empty(), buildId);
    }

    /**
     * GetBuildInfoV2Deprecated
     * 
     * <p>Get details for a [build](https://hathora.dev/docs/concepts/hathora-entities#build).
     * 
     * @param appId 
     * @param buildId 
     * @return CompletableFuture&lt;GetBuildInfoV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetBuildInfoV2DeprecatedResponse> getBuildInfoV2Deprecated(Optional<String> appId, int buildId) {
        GetBuildInfoV2DeprecatedRequest request =
            GetBuildInfoV2DeprecatedRequest
                .builder()
                .appId(appId)
                .buildId(buildId)
                .build();
        AsyncRequestOperation<GetBuildInfoV2DeprecatedRequest, GetBuildInfoV2DeprecatedResponse> operation
              = new GetBuildInfoV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetBuildsV2Deprecated
     * 
     * <p>Returns an array of [builds](https://hathora.dev/docs/concepts/hathora-entities#build) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public GetBuildsV2DeprecatedRequestBuilder getBuildsV2Deprecated() {
        return new GetBuildsV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * GetBuildsV2Deprecated
     * 
     * <p>Returns an array of [builds](https://hathora.dev/docs/concepts/hathora-entities#build) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @return CompletableFuture&lt;GetBuildsV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetBuildsV2DeprecatedResponse> getBuildsV2DeprecatedDirect() {
        return getBuildsV2Deprecated(Optional.empty());
    }

    /**
     * GetBuildsV2Deprecated
     * 
     * <p>Returns an array of [builds](https://hathora.dev/docs/concepts/hathora-entities#build) for an [application](https://hathora.dev/docs/concepts/hathora-entities#application).
     * 
     * @param appId 
     * @return CompletableFuture&lt;GetBuildsV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<GetBuildsV2DeprecatedResponse> getBuildsV2Deprecated(Optional<String> appId) {
        GetBuildsV2DeprecatedRequest request =
            GetBuildsV2DeprecatedRequest
                .builder()
                .appId(appId)
                .build();
        AsyncRequestOperation<GetBuildsV2DeprecatedRequest, GetBuildsV2DeprecatedResponse> operation
              = new GetBuildsV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * RunBuildV2Deprecated
     * 
     * <p>Builds a game server artifact from a tarball you provide. Pass in the `buildId` generated from [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild).
     * 
     * @return The async call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public RunBuildV2DeprecatedRequestBuilder runBuildV2Deprecated() {
        return new RunBuildV2DeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * RunBuildV2Deprecated
     * 
     * <p>Builds a game server artifact from a tarball you provide. Pass in the `buildId` generated from [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild).
     * 
     * @param requestBody 
     * @param buildId 
     * @return CompletableFuture&lt;RunBuildV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<RunBuildV2DeprecatedResponse> runBuildV2Deprecated(RunBuildV2DeprecatedRequestBody requestBody, int buildId) {
        return runBuildV2Deprecated(requestBody, Optional.empty(), buildId);
    }

    /**
     * RunBuildV2Deprecated
     * 
     * <p>Builds a game server artifact from a tarball you provide. Pass in the `buildId` generated from [`CreateBuild()`](https://hathora.dev/api#tag/BuildV1/operation/CreateBuild).
     * 
     * @param requestBody 
     * @param appId 
     * @param buildId 
     * @return CompletableFuture&lt;RunBuildV2DeprecatedResponse&gt; - The async response
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CompletableFuture<RunBuildV2DeprecatedResponse> runBuildV2Deprecated(
            RunBuildV2DeprecatedRequestBody requestBody, Optional<String> appId,
            int buildId) {
        RunBuildV2DeprecatedRequest request =
            RunBuildV2DeprecatedRequest
                .builder()
                .requestBody(requestBody)
                .appId(appId)
                .buildId(buildId)
                .build();
        AsyncRequestOperation<RunBuildV2DeprecatedRequest, RunBuildV2DeprecatedResponse> operation
              = new RunBuildV2Deprecated.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
