/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.AsyncRequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreateOrgTokenRequest;
import dev.hathora.cloud_sdk.models.operations.GetOrgTokensRequest;
import dev.hathora.cloud_sdk.models.operations.RevokeOrgTokenRequest;
import dev.hathora.cloud_sdk.models.operations.async.CreateOrgTokenRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.CreateOrgTokenResponse;
import dev.hathora.cloud_sdk.models.operations.async.GetOrgTokensRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.GetOrgTokensResponse;
import dev.hathora.cloud_sdk.models.operations.async.RevokeOrgTokenRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.async.RevokeOrgTokenResponse;
import dev.hathora.cloud_sdk.models.shared.CreateOrgToken;
import dev.hathora.cloud_sdk.operations.GetOrgTokens;
import dev.hathora.cloud_sdk.operations.RevokeOrgToken;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.String;
import java.util.concurrent.CompletableFuture;


public class AsyncTokensV1 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final TokensV1 syncSDK;

    AsyncTokensV1(TokensV1 syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public TokensV1 sync() {
        return syncSDK;
    }


    /**
     * CreateOrgToken
     * 
     * <p>Create a new organization token.
     * 
     * @return The async call builder
     */
    public CreateOrgTokenRequestBuilder createOrgToken() {
        return new CreateOrgTokenRequestBuilder(sdkConfiguration);
    }

    /**
     * CreateOrgToken
     * 
     * <p>Create a new organization token.
     * 
     * @param createOrgToken 
     * @param orgId 
     * @return CompletableFuture&lt;CreateOrgTokenResponse&gt; - The async response
     */
    public CompletableFuture<CreateOrgTokenResponse> createOrgToken(CreateOrgToken createOrgToken, String orgId) {
        CreateOrgTokenRequest request =
            CreateOrgTokenRequest
                .builder()
                .createOrgToken(createOrgToken)
                .orgId(orgId)
                .build();
        AsyncRequestOperation<CreateOrgTokenRequest, CreateOrgTokenResponse> operation
              = new dev.hathora.cloud_sdk.operations.CreateOrgToken.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * GetOrgTokens
     * 
     * <p>List all organization tokens for a given org.
     * 
     * @return The async call builder
     */
    public GetOrgTokensRequestBuilder getOrgTokens() {
        return new GetOrgTokensRequestBuilder(sdkConfiguration);
    }

    /**
     * GetOrgTokens
     * 
     * <p>List all organization tokens for a given org.
     * 
     * @param orgId 
     * @return CompletableFuture&lt;GetOrgTokensResponse&gt; - The async response
     */
    public CompletableFuture<GetOrgTokensResponse> getOrgTokens(String orgId) {
        GetOrgTokensRequest request =
            GetOrgTokensRequest
                .builder()
                .orgId(orgId)
                .build();
        AsyncRequestOperation<GetOrgTokensRequest, GetOrgTokensResponse> operation
              = new GetOrgTokens.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * RevokeOrgToken
     * 
     * <p>Revoke an organization token.
     * 
     * @return The async call builder
     */
    public RevokeOrgTokenRequestBuilder revokeOrgToken() {
        return new RevokeOrgTokenRequestBuilder(sdkConfiguration);
    }

    /**
     * RevokeOrgToken
     * 
     * <p>Revoke an organization token.
     * 
     * @param orgId 
     * @param orgTokenId 
     * @return CompletableFuture&lt;RevokeOrgTokenResponse&gt; - The async response
     */
    public CompletableFuture<RevokeOrgTokenResponse> revokeOrgToken(String orgId, String orgTokenId) {
        RevokeOrgTokenRequest request =
            RevokeOrgTokenRequest
                .builder()
                .orgId(orgId)
                .orgTokenId(orgTokenId)
                .build();
        AsyncRequestOperation<RevokeOrgTokenRequest, RevokeOrgTokenResponse> operation
              = new RevokeOrgToken.Async(sdkConfiguration, _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
