/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package dev.hathora.cloud_sdk;

import static dev.hathora.cloud_sdk.operations.Operations.RequestOperation;

import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.CreatePrivateLobbyDeprecatedSecurity;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyDeprecatedRequest;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyDeprecatedRequestBuilder;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyDeprecatedResponse;
import dev.hathora.cloud_sdk.models.operations.CreatePublicLobbyDeprecatedSecurity;
import dev.hathora.cloud_sdk.models.operations.ListActivePublicLobbiesDeprecatedV1Request;
import dev.hathora.cloud_sdk.models.operations.ListActivePublicLobbiesDeprecatedV1RequestBuilder;
import dev.hathora.cloud_sdk.models.operations.ListActivePublicLobbiesDeprecatedV1Response;
import dev.hathora.cloud_sdk.models.shared.Region;
import dev.hathora.cloud_sdk.operations.CreatePrivateLobbyDeprecated;
import dev.hathora.cloud_sdk.operations.CreatePublicLobbyDeprecated;
import dev.hathora.cloud_sdk.operations.ListActivePublicLobbiesDeprecatedV1;
import dev.hathora.cloud_sdk.utils.Headers;
import java.lang.Boolean;
import java.lang.Deprecated;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class LobbiesV1 {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncLobbiesV1 asyncSDK;

    LobbiesV1(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncLobbiesV1(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncLobbiesV1 async() {
        return asyncSDK;
    }

    /**
     * CreatePrivateLobbyDeprecated
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePrivateLobbyDeprecatedRequestBuilder createPrivateLobbyDeprecated() {
        return new CreatePrivateLobbyDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreatePrivateLobbyDeprecated
     * 
     * @param security The security details to use for authentication.
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePrivateLobbyDeprecatedResponse createPrivateLobbyDeprecated(CreatePrivateLobbyDeprecatedSecurity security) throws Exception {
        return createPrivateLobbyDeprecated(security, Optional.empty(), Optional.empty(),
            Optional.empty());
    }

    /**
     * CreatePrivateLobbyDeprecated
     * 
     * @param security The security details to use for authentication.
     * @param appId 
     * @param local 
     * @param region 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePrivateLobbyDeprecatedResponse createPrivateLobbyDeprecated(
            CreatePrivateLobbyDeprecatedSecurity security, Optional<String> appId,
            Optional<Boolean> local, Optional<? extends Region> region) throws Exception {
        CreatePrivateLobbyDeprecatedRequest request =
            CreatePrivateLobbyDeprecatedRequest
                .builder()
                .appId(appId)
                .local(local)
                .region(region)
                .build();
        RequestOperation<CreatePrivateLobbyDeprecatedRequest, CreatePrivateLobbyDeprecatedResponse> operation
              = new CreatePrivateLobbyDeprecated.Sync(sdkConfiguration, security, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * CreatePublicLobbyDeprecated
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePublicLobbyDeprecatedRequestBuilder createPublicLobbyDeprecated() {
        return new CreatePublicLobbyDeprecatedRequestBuilder(sdkConfiguration);
    }

    /**
     * CreatePublicLobbyDeprecated
     * 
     * @param security The security details to use for authentication.
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePublicLobbyDeprecatedResponse createPublicLobbyDeprecated(CreatePublicLobbyDeprecatedSecurity security) throws Exception {
        return createPublicLobbyDeprecated(security, Optional.empty(), Optional.empty(),
            Optional.empty());
    }

    /**
     * CreatePublicLobbyDeprecated
     * 
     * @param security The security details to use for authentication.
     * @param appId 
     * @param local 
     * @param region 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public CreatePublicLobbyDeprecatedResponse createPublicLobbyDeprecated(
            CreatePublicLobbyDeprecatedSecurity security, Optional<String> appId,
            Optional<Boolean> local, Optional<? extends Region> region) throws Exception {
        CreatePublicLobbyDeprecatedRequest request =
            CreatePublicLobbyDeprecatedRequest
                .builder()
                .appId(appId)
                .local(local)
                .region(region)
                .build();
        RequestOperation<CreatePublicLobbyDeprecatedRequest, CreatePublicLobbyDeprecatedResponse> operation
              = new CreatePublicLobbyDeprecated.Sync(sdkConfiguration, security, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * ListActivePublicLobbiesDeprecatedV1
     * 
     * @return The call builder
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ListActivePublicLobbiesDeprecatedV1RequestBuilder listActivePublicLobbiesDeprecatedV1() {
        return new ListActivePublicLobbiesDeprecatedV1RequestBuilder(sdkConfiguration);
    }

    /**
     * ListActivePublicLobbiesDeprecatedV1
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ListActivePublicLobbiesDeprecatedV1Response listActivePublicLobbiesDeprecatedV1Direct() throws Exception {
        return listActivePublicLobbiesDeprecatedV1(Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * ListActivePublicLobbiesDeprecatedV1
     * 
     * @param appId 
     * @param local 
     * @param region 
     * @return The response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public ListActivePublicLobbiesDeprecatedV1Response listActivePublicLobbiesDeprecatedV1(
            Optional<String> appId, Optional<Boolean> local,
            Optional<? extends Region> region) throws Exception {
        ListActivePublicLobbiesDeprecatedV1Request request =
            ListActivePublicLobbiesDeprecatedV1Request
                .builder()
                .appId(appId)
                .local(local)
                .region(region)
                .build();
        RequestOperation<ListActivePublicLobbiesDeprecatedV1Request, ListActivePublicLobbiesDeprecatedV1Response> operation
              = new ListActivePublicLobbiesDeprecatedV1.Sync(sdkConfiguration, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
