/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package dev.hathora.cloud_api.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import dev.hathora.cloud_api.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

public class InviteStatusRescinded {

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    @JsonProperty("rescindedBy")
    private String rescindedBy;

    @JsonProperty("type")
    private InviteStatusRescindedType type;

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    private Optional<? extends String> userId;

    @JsonCreator
    public InviteStatusRescinded(
            @JsonProperty("rescindedBy") String rescindedBy,
            @JsonProperty("type") InviteStatusRescindedType type,
            @JsonProperty("userId") Optional<? extends String> userId) {
        Utils.checkNotNull(rescindedBy, "rescindedBy");
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(userId, "userId");
        this.rescindedBy = rescindedBy;
        this.type = type;
        this.userId = userId;
    }
    
    public InviteStatusRescinded(
            String rescindedBy,
            InviteStatusRescindedType type) {
        this(rescindedBy, type, Optional.empty());
    }

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    @JsonIgnore
    public String rescindedBy() {
        return rescindedBy;
    }

    @JsonIgnore
    public InviteStatusRescindedType type() {
        return type;
    }

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<String> userId() {
        return (Optional<String>) userId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    public InviteStatusRescinded withRescindedBy(String rescindedBy) {
        Utils.checkNotNull(rescindedBy, "rescindedBy");
        this.rescindedBy = rescindedBy;
        return this;
    }

    public InviteStatusRescinded withType(InviteStatusRescindedType type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    public InviteStatusRescinded withUserId(String userId) {
        Utils.checkNotNull(userId, "userId");
        this.userId = Optional.ofNullable(userId);
        return this;
    }

    /**
     * System generated unique identifier for a user. Not guaranteed to have a specific format.
     */
    public InviteStatusRescinded withUserId(Optional<? extends String> userId) {
        Utils.checkNotNull(userId, "userId");
        this.userId = userId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InviteStatusRescinded other = (InviteStatusRescinded) o;
        return 
            java.util.Objects.deepEquals(this.rescindedBy, other.rescindedBy) &&
            java.util.Objects.deepEquals(this.type, other.type) &&
            java.util.Objects.deepEquals(this.userId, other.userId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            rescindedBy,
            type,
            userId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(InviteStatusRescinded.class,
                "rescindedBy", rescindedBy,
                "type", type,
                "userId", userId);
    }
    
    public final static class Builder {
 
        private String rescindedBy;
 
        private InviteStatusRescindedType type;
 
        private Optional<? extends String> userId = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * System generated unique identifier for a user. Not guaranteed to have a specific format.
         */
        public Builder rescindedBy(String rescindedBy) {
            Utils.checkNotNull(rescindedBy, "rescindedBy");
            this.rescindedBy = rescindedBy;
            return this;
        }

        public Builder type(InviteStatusRescindedType type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        /**
         * System generated unique identifier for a user. Not guaranteed to have a specific format.
         */
        public Builder userId(String userId) {
            Utils.checkNotNull(userId, "userId");
            this.userId = Optional.ofNullable(userId);
            return this;
        }

        /**
         * System generated unique identifier for a user. Not guaranteed to have a specific format.
         */
        public Builder userId(Optional<? extends String> userId) {
            Utils.checkNotNull(userId, "userId");
            this.userId = userId;
            return this;
        }
        
        public InviteStatusRescinded build() {
            return new InviteStatusRescinded(
                rescindedBy,
                type,
                userId);
        }
    }
}

