/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package dev.hathora.cloud_api.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import dev.hathora.cloud_api.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class CreatedOrgToken {

    @JsonProperty("orgToken")
    private OrgToken orgToken;

    @JsonProperty("plainTextToken")
    private String plainTextToken;

    public CreatedOrgToken(
            @JsonProperty("orgToken") OrgToken orgToken,
            @JsonProperty("plainTextToken") String plainTextToken) {
        Utils.checkNotNull(orgToken, "orgToken");
        Utils.checkNotNull(plainTextToken, "plainTextToken");
        this.orgToken = orgToken;
        this.plainTextToken = plainTextToken;
    }

    public OrgToken orgToken() {
        return orgToken;
    }

    public String plainTextToken() {
        return plainTextToken;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreatedOrgToken withOrgToken(OrgToken orgToken) {
        Utils.checkNotNull(orgToken, "orgToken");
        this.orgToken = orgToken;
        return this;
    }

    public CreatedOrgToken withPlainTextToken(String plainTextToken) {
        Utils.checkNotNull(plainTextToken, "plainTextToken");
        this.plainTextToken = plainTextToken;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreatedOrgToken other = (CreatedOrgToken) o;
        return 
            java.util.Objects.deepEquals(this.orgToken, other.orgToken) &&
            java.util.Objects.deepEquals(this.plainTextToken, other.plainTextToken);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            orgToken,
            plainTextToken);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreatedOrgToken.class,
                "orgToken", orgToken,
                "plainTextToken", plainTextToken);
    }
    
    public final static class Builder {
 
        private OrgToken orgToken;
 
        private String plainTextToken;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder orgToken(OrgToken orgToken) {
            Utils.checkNotNull(orgToken, "orgToken");
            this.orgToken = orgToken;
            return this;
        }

        public Builder plainTextToken(String plainTextToken) {
            Utils.checkNotNull(plainTextToken, "plainTextToken");
            this.plainTextToken = plainTextToken;
            return this;
        }
        
        public CreatedOrgToken build() {
            return new CreatedOrgToken(
                orgToken,
                plainTextToken);
        }
    }
}

