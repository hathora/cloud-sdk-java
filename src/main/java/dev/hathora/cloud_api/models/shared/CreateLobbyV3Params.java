/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package dev.hathora.cloud_api.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import dev.hathora.cloud_api.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class CreateLobbyV3Params {

    @JsonProperty("region")
    private Region region;

    /**
     * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roomConfig")
    private Optional<? extends String> roomConfig;

    /**
     * Types of lobbies a player can create.
     * 
     * `private`: the player who created the room must share the roomId with their friends
     * 
     * `public`: visible in the public lobby list, anyone can join
     * 
     * `local`: for testing with a server running locally
     */
    @JsonProperty("visibility")
    private LobbyVisibility visibility;

    public CreateLobbyV3Params(
            @JsonProperty("region") Region region,
            @JsonProperty("roomConfig") Optional<? extends String> roomConfig,
            @JsonProperty("visibility") LobbyVisibility visibility) {
        Utils.checkNotNull(region, "region");
        Utils.checkNotNull(roomConfig, "roomConfig");
        Utils.checkNotNull(visibility, "visibility");
        this.region = region;
        this.roomConfig = roomConfig;
        this.visibility = visibility;
    }

    public Region region() {
        return region;
    }

    /**
     * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
     */
    public Optional<? extends String> roomConfig() {
        return roomConfig;
    }

    /**
     * Types of lobbies a player can create.
     * 
     * `private`: the player who created the room must share the roomId with their friends
     * 
     * `public`: visible in the public lobby list, anyone can join
     * 
     * `local`: for testing with a server running locally
     */
    public LobbyVisibility visibility() {
        return visibility;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateLobbyV3Params withRegion(Region region) {
        Utils.checkNotNull(region, "region");
        this.region = region;
        return this;
    }

    /**
     * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
     */
    public CreateLobbyV3Params withRoomConfig(String roomConfig) {
        Utils.checkNotNull(roomConfig, "roomConfig");
        this.roomConfig = Optional.ofNullable(roomConfig);
        return this;
    }

    /**
     * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
     */
    public CreateLobbyV3Params withRoomConfig(Optional<? extends String> roomConfig) {
        Utils.checkNotNull(roomConfig, "roomConfig");
        this.roomConfig = roomConfig;
        return this;
    }

    /**
     * Types of lobbies a player can create.
     * 
     * `private`: the player who created the room must share the roomId with their friends
     * 
     * `public`: visible in the public lobby list, anyone can join
     * 
     * `local`: for testing with a server running locally
     */
    public CreateLobbyV3Params withVisibility(LobbyVisibility visibility) {
        Utils.checkNotNull(visibility, "visibility");
        this.visibility = visibility;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateLobbyV3Params other = (CreateLobbyV3Params) o;
        return 
            java.util.Objects.deepEquals(this.region, other.region) &&
            java.util.Objects.deepEquals(this.roomConfig, other.roomConfig) &&
            java.util.Objects.deepEquals(this.visibility, other.visibility);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            region,
            roomConfig,
            visibility);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateLobbyV3Params.class,
                "region", region,
                "roomConfig", roomConfig,
                "visibility", visibility);
    }
    
    public final static class Builder {
 
        private Region region;
 
        private Optional<? extends String> roomConfig = Optional.empty();
 
        private LobbyVisibility visibility;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder region(Region region) {
            Utils.checkNotNull(region, "region");
            this.region = region;
            return this;
        }

        /**
         * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
         */
        public Builder roomConfig(String roomConfig) {
            Utils.checkNotNull(roomConfig, "roomConfig");
            this.roomConfig = Optional.ofNullable(roomConfig);
            return this;
        }

        /**
         * Optional configuration parameters for the room. Can be any string including stringified JSON. It is accessible from the room via [`GetRoomInfo()`](https://hathora.dev/api#tag/RoomV2/operation/GetRoomInfo).
         */
        public Builder roomConfig(Optional<? extends String> roomConfig) {
            Utils.checkNotNull(roomConfig, "roomConfig");
            this.roomConfig = roomConfig;
            return this;
        }

        /**
         * Types of lobbies a player can create.
         * 
         * `private`: the player who created the room must share the roomId with their friends
         * 
         * `public`: visible in the public lobby list, anyone can join
         * 
         * `local`: for testing with a server running locally
         */
        public Builder visibility(LobbyVisibility visibility) {
            Utils.checkNotNull(visibility, "visibility");
            this.visibility = visibility;
            return this;
        }
        
        public CreateLobbyV3Params build() {
            return new CreateLobbyV3Params(
                region,
                roomConfig,
                visibility);
        }
    }
}

